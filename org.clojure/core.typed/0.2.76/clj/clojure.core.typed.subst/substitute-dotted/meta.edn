{:type :fn, :src "(defn substitute-dotted [image image-bound name target]\n  {:pre [(r/AnyType? image)\n         (symbol? image-bound)\n         (symbol? name)\n         (r/AnyType? target)]\n   :post [(r/AnyType? %)]}\n  (letfn [(sb [t] (substitute-dotted image image-bound name t))]\n    (if ((frees/fi target) name)\n      (f/fold-rhs ::substitute-dotted\n                {:type-rec sb \n                 :filter-rec (f/sub-f sb ::substitute-dotted)\n                 :locals {:name name\n                          :sb sb\n                          :image image}}\n                target\n                target)\n      target)))", :ns "clojure.core.typed.subst", :name "substitute-dotted", :file "clojure/core/typed/subst.clj", :column 1, :line 214, :arglists ([image image-bound name target])}