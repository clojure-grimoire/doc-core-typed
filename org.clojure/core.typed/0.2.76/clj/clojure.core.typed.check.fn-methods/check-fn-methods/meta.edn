{:type :fn, :src "(defn check-fn-methods [mthods expected & {:as opt}]\n  {:pre [(r/Type? expected)\n         ((every-pred methods? seq) mthods)\n         (opt-map? opt)]\n   :post [(methods? %)]}\n  ;(prn \"check-fn-methods\")\n  (let [ts (function-types expected)]\n    (if (empty? ts)\n      (prs/with-unparse-ns (cu/expr-ns (first mthods))\n        (err/tc-delayed-error (str (prs/unparse-type expected) \" is not a function type\")\n                              :return []))\n      (vec\n        (mapcat (fn [t] (check-fni t mthods opt))\n                ts)))))", :ns "clojure.core.typed.check.fn-methods", :name "check-fn-methods", :file "clojure/core/typed/check/fn_methods.clj", :column 1, :line 159, :arglists ([mthods expected & {:as opt}])}