{:type :fn, :src "(defn abstract-result [result arg-names]\n  {:pre [(r/TCResult? result)\n         (every? symbol? arg-names)]\n   :post [(r/Result? %)]}\n  ;(prn \"abstract result\" result arg-names)\n  (u/p :check/abstract-result\n  (let [keys (range (count arg-names))]\n    (r/make-Result\n      (abstract-type   arg-names keys (r/ret-t result))\n      (abstract-filter arg-names keys (r/ret-f result))\n      (abstract-object arg-names keys (r/ret-o result))))))", :ns "clojure.core.typed.abo", :name "abstract-result", :file "clojure/core/typed/abo.clj", :column 1, :line 127, :arglists ([result arg-names])}