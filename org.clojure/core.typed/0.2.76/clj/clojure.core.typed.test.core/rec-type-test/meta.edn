{:type :fn, :src "(deftest rec-type-test\n  (is-clj (sub?-q\n            `(HMap :mandatory {:a [Any :-> Any]} :complete? true)\n            `(Rec [x#] (Map Any (U [Any :-> Any] x#)))))\n  (is-clj (sub?-q\n            `(HVec [[Any :-> Any]])\n            `(Rec [x#] (Vec (U [Any :-> Any] x#)))))\n  (is-clj (sub?-q\n            `(Vec [Any :-> Any])\n            `(Rec [x#] (Vec (U [Any :-> Any] x#)))))\n  (is-clj (sub?-q\n            `(Vec ':a)\n            `(Rec [x#] (Vec (U ':a x#)))))\n  (is-clj (not\n            (sub?-q\n              nil\n              `(Rec [x#] (Vec (U ':a x#))))))\n  (is (check-ns 'clojure.core.typed.test.rec-type)))", :ns "clojure.core.typed.test.core", :name "rec-type-test", :file "clojure/core/typed/test/core.clj", :column 1, :line 2787, :test #<core$fn__31091 clojure.core.typed.test.core$fn__31091@4f0280dd>}