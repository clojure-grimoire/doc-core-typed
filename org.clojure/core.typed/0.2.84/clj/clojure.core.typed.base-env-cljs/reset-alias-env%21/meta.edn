{:type :fn, :src "(defn reset-alias-env! []\n  (let [alias-env (init-alias-env)]\n    ; Ensure init-alias-env agrees with the -base-aliases\n    (assert (= (set (keys alias-env))\n               (set (map #(symbol \"cljs.core.typed\" (str %))\n                         boot/-base-aliases)))\n            (str \"core.typed Bug! Base aliases do not agree with base environment.\"\n                 \" Missing from cljs.core.typed ns: \"\n                 (set/difference (set (keys alias-env))\n                                 (set (map #(symbol \"cljs.core.typed\" (str %))\n                                           boot/-base-aliases)))\n                 \" Missing from base-env-cljs ns \"\n                 (set/difference (set (map #(symbol \"cljs.core.typed\" (str %))\n                                           boot/-base-aliases))\n                                 (set (keys alias-env)))))\n    ((impl/v 'clojure.core.typed.name-env/reset-name-env!) alias-env)))", :ns "clojure.core.typed.base-env-cljs", :name "reset-alias-env!", :file "clojure/core/typed/base_env_cljs.clj", :column 1, :line 461, :arglists ([])}