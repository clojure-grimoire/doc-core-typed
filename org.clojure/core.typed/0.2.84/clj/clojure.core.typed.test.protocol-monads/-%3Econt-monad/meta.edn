{:type :fn, :src "(deftype cont-monad [v mv f]\n  clojure.lang.IDeref\n  (deref [mv]\n    (mv identity))\n\n  clojure.lang.IFn\n  (invoke [_ c]\n    (if f\n      (mv (fn [v] ((f v) c)))\n      (c v)))\n\n  Monad\n  (do-result [_ v]\n    (cont-monad. v nil nil))\n  (bind [mv f]\n    (cont-monad. nil mv f)))", :ns "clojure.core.typed.test.protocol-monads", :name "->cont-monad", :file "clojure/core/typed/test/protocol_monads.clj", :column 1, :line 346, :arglists ([v mv f]), :doc "Positional factory function for class clojure.core.typed.test.protocol_monads.cont-monad."}