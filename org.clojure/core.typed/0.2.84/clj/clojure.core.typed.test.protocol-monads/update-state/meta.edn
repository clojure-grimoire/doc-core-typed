{:ns "clojure.core.typed.test.protocol-monads", :name "update-state", :file "clojure/core/typed/test/protocol_monads.clj", :type :fn, :src "(defn update-state\n  \"Return a state-monad value that replaces the current state by the\n   result of f applied to the current state and that returns the old state.\"\n  [f]\n  (reify\n    clojure.lang.IFn\n    (invoke [_ s]\n      [s (f s)])\n\n    Monad\n    (do-result [_ v]\n      (state-monad. v nil nil))\n    (bind [mv f]\n      (state-monad. nil mv f))))", :column 1, :line 285, :arglists ([f]), :doc "Return a state-monad value that replaces the current state by the\n   result of f applied to the current state and that returns the old state."}