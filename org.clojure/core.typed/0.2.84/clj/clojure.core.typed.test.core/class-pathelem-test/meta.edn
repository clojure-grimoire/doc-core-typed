{:type :fn, :src "(deftest class-pathelem-test\n  (is-clj (= (-> (ety #(class %))\n                 :types first :rng Result-object*)\n             (-path [(ClassPE-maker)] 0)))\n  (is-clj (subtype? \n            (ety \n              #(= Number (class %)))\n            (FnIntersection-maker\n              [(make-Function\n                 [-any]\n                 (RClass-of 'boolean)\n                 nil nil\n                 :filter (-FS (-and (-filter (-val Number) 0 [(ClassPE-maker)])\n                                    ;the important filter, updates first argument to be Number if predicate is true\n                                    (-filter (RClass-of Number) 0))\n                              (-not-filter (-val Number) 0 [(ClassPE-maker)])))]))))", :ns "clojure.core.typed.test.core", :name "class-pathelem-test", :file "clojure/core/typed/test/core.clj", :column 1, :line 1114, :test #<core$fn__26527 clojure.core.typed.test.core$fn__26527@304fcc7d>}