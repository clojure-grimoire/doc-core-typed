{:type :fn, :src "(deftest destructuring-test\n  ;Vector destructuring with :as\n  (is-clj (subtype? (ety (let [[a b :as c] :- (Vec Num), [1 2]]\n                           [a b c]))\n                    (-hvec [(Un -nil (RClass-of Number))\n                            (Un -nil (RClass-of Number))\n                            (RClass-of Seqable [(RClass-of Number)])])))\n  (is-clj (= (ety (let [[a b :as c] [1 2]] \n                    [a b c]))\n             (-hvec [(-val 1)\n                     (-val 2)\n                     (-hvec [(-val 1) (-val 2)])]\n                    :filters [(-true-filter) (-true-filter) (-true-filter)])))\n  ;Map destructuring of vector\n  ;FIXME needs implementing, but gives a decent error msg\n  #_(is-clj (= (ret-t (tc-t (let [{a 0 b 1 :as c} [1 2]] \n                        [a b c])))\n         (-hvec [(-val 1)\n                 (-val 2)\n                 (-hvec [(-val 1) (-val 2)])]))))", :ns "clojure.core.typed.test.core", :name "destructuring-test", :file "clojure/core/typed/test/core.clj", :column 1, :line 1039, :test #<core$fn__26527 clojure.core.typed.test.core$fn__26527@1323a609>}