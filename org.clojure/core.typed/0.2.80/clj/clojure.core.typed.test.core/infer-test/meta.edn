{:type :fn, :src "(deftest infer-test\n  (is-clj (clj\n        (= (infer (zipmap '[x y] (repeat no-bounds)) ;tv env\n                  {}\n                  [(-val 1) (-val 2)] ;actual\n                  [(make-F 'x) (make-F 'y)] ;expected\n                  (make-F 'x))))) ;result\n  (is-clj (clj \n        (= (infer {'x no-bounds} ;tv env\n                  {}\n                  [(RClass-of IPersistentVector [(Un (-val 1) (-val 2) (-val 3))])] ;actual\n                  [(RClass-of Seqable [(make-F 'x)])] ;expected\n                  (RClass-of clojure.lang.ASeq [(make-F 'x)]))))) ;result\n  (is-clj (clj\n        (= (infer {'x no-bounds} ;tv env\n                  {}\n                  [(-hvec [(-val 1) (-val 2) (-val 3)])] ;actual\n                  [(RClass-of Seqable [(make-F 'x)])] ;expected\n                  (RClass-of clojure.lang.ASeq [(make-F 'x)]))))))", :ns "clojure.core.typed.test.core", :name "infer-test", :file "clojure/core/typed/test/core.clj", :column 1, :line 919, :test #<core$fn__26129 clojure.core.typed.test.core$fn__26129@3aef4fb3>}