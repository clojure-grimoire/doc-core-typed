{:type :fn, :src "(deftest recursive-defalias-test\n  ;; List already refers to c.c.t/List\n  (is (thrown?\n        java.lang.IllegalStateException\n        (tc-e (do (defalias List\n              (U '{:op ':cons\n                   :car Any\n                   :cdr List}\n                 '{:op ':nil}))\n            (let [a :- List1, {:op :nil}\n                  b :- List1, {:op :cons \n                               :car 1\n                               :cdr a}])))))\n  (is-tc-e\n    (do (defalias List1\n          (U '{:op ':cons\n               :car Any\n               :cdr List1}\n             '{:op ':nil}))\n        (let [a :- List1, {:op :nil}\n              b :- List1, {:op :cons \n                           :car 1\n                           :cdr a}]))))", :ns "clojure.core.typed.test.core", :name "recursive-defalias-test", :file "clojure/core/typed/test/core.clj", :column 1, :line 4670, :test #<core$fn__37816 clojure.core.typed.test.core$fn__37816@72bae8c5>}