{:type :fn, :src "(deftest flow-assert-test\n  (is-clj (subtype?\n            (ety (fn [a]\n                   {:pre [(integer? a)]}\n                   a))\n            (parse-type `[Any :-> AnyInteger])))\n  (is-clj (subtype? \n            (ety (let [a (read-string \"1\")\n                       _ (assert (integer? a))]\n                   (+ 10 a)))\n            (parse-type `AnyInteger)))\n  ;postconditions\n  (is-clj (subtype?\n            (ety (fn [a]\n                   {:post [(vector? %)]}\n                   a))\n            (parse-type `[Any :-> (Vec Any)]))))", :ns "clojure.core.typed.test.core", :name "flow-assert-test", :file "clojure/core/typed/test/core.clj", :column 1, :line 1218, :test #<core$fn__27059 clojure.core.typed.test.core$fn__27059@74c49778>}