{:ns "clojure.core.typed.test.logic.macros", :name "handle-clause", :file "clojure/core/typed/test/logic/macros.clj", :type :fn, :src "(defn handle-clause [as]\n  (when-not (vector? as)\n    (throw (Exception. (str \"Expecting vector of arguments, instead \" as))))\n  (fn [[p & exprs]]\n    (when-not (vector? p)\n      (throw (Exception. (str \"Expecting vector of matches, instead \" p))))\n    (when-not (= (count p) (count as))\n      (warn \"Differing number of matches. Matching\" p \"against\" as))\n    (let [pas (partition 2 (interleave p as))\n          r (ex* pas exprs #{})]\n      (if (all-blank? p)\n        r\n        (list r)))))", :column 1, :line 304, :arglists ([as])}