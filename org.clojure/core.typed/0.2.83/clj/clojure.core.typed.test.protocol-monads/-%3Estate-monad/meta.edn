{:type :fn, :src "(deftype state-monad [v mv f]\n  clojure.lang.IFn\n  (invoke [_ s]\n    (if f\n      (let [[v ss] (mv s)]\n        ((f v) ss))\n      [v s]))\n\n  Monad\n  (do-result [_ v]\n    (state-monad. v nil nil))\n  (bind [mv f]\n    (state-monad. nil mv f)))", :ns "clojure.core.typed.test.protocol-monads", :name "->state-monad", :file "clojure/core/typed/test/protocol_monads.clj", :column 1, :line 265, :arglists ([v mv f]), :doc "Positional factory function for class clojure.core.typed.test.protocol_monads.state-monad."}