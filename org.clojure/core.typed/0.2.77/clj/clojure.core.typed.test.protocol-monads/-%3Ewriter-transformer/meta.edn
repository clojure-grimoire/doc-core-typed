{:type :fn, :src "(deftype writer-transformer [m mv writer-m]\n  clojure.lang.IDeref\n  (deref [_]\n    mv)\n\n  Monad\n  (do-result [_ v]\n    (writer-transformer.\n     m (m (writer-m v)) writer-m))\n  (bind [mv f]\n    (let [mv (deref mv)]\n      (writer-transformer.\n       m (bind mv (fn [v]\n                    (let [[v1 a1] (deref v)]\n                      (bind (deref (f v1))\n                            (fn [v]\n                              (let [[v2 a2] (deref v)]\n                                (m (writer-monad. v2 (writer-m-combine a1 a2)))))))))\n       writer-m)))\n\n  MonadZero\n  (zero [mv]\n    (let [v (deref mv)]\n      (writer-transformer. m (zero v) writer-m)))\n  (plus-step [mv mvs]\n    (writer-transformer.\n     m (plus (clojure.core/map deref (cons mv mvs)))\n     writer-m)))", :ns "clojure.core.typed.test.protocol-monads", :name "->writer-transformer", :file "clojure/core/typed/test/protocol_monads.clj", :column 1, :line 595, :arglists ([m mv writer-m]), :doc "Positional factory function for class clojure.core.typed.test.protocol_monads.writer-transformer."}