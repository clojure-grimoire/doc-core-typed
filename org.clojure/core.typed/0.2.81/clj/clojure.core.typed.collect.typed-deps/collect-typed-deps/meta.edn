{:type :fn, :src "(defn collect-typed-deps\n  [collect-ns {:keys [args] :as expr}]\n  (clt-u/assert-expr-args expr #{1})\n  (let [prs-ns (chk-u/expr-ns expr)\n        [deps] (ast-u/constant-exprs args)\n        _ (assert (and deps (seq deps) (every? symbol? deps)))]\n    (if vs/*already-collected*\n      (do (dep/add-ns-deps prs-ns (set deps))\n          (doseq [dep deps]\n            (if (coerce/ns->URL dep)\n              (collect-ns dep)\n              (err/int-error (str \"Cannot find dependency declared with typed-deps: \" dep)))))\n      (do (println \"WARNING: Not collecting namespaces, must call typed-deps via check-ns\")\n          (flush)))\n    nil))", :ns "clojure.core.typed.collect.typed-deps", :name "collect-typed-deps", :file "clojure/core/typed/collect/typed_deps.clj", :column 1, :line 10, :arglists ([collect-ns {:keys [args], :as expr}])}