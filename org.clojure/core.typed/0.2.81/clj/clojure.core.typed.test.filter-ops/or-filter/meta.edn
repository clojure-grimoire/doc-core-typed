{:type :fn, :src "(deftest or-filter\n  (is (= (-or -bot -bot)\n         -bot))\n  (is (= (-or -top -top)\n         -top))\n  (is (= (-or -top -bot)\n         -top))\n  (is (= (-or -top (-filter (parse-type `nil) 0))\n         -top))\n\n  ;normalise to conjunctions of disjunctions\n  (is (= (-or (-and (-filter (parse-type nil) 0)\n                    (-filter (parse-type nil) 1))\n              (-and (-filter (parse-type nil) 2)\n                    (-filter (parse-type nil) 3)))\n         (apply make-AndFilter\n                (for [l [0 1]\n                      r [2 3]]\n                  (make-OrFilter (-filter (parse-type nil) l)\n                                 (-filter (parse-type nil) r)))))))", :ns "clojure.core.typed.test.filter-ops", :name "or-filter", :file "clojure/core/typed/test/filter_ops.clj", :column 1, :line 41, :test #<filter_ops$fn__18253 clojure.core.typed.test.filter_ops$fn__18253@7bf1f188>}