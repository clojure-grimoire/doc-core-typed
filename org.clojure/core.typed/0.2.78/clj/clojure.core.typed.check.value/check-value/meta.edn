{:type :fn, :src "(defn check-value\n  [{:keys [val] :as expr} expected]\n  {:pre [(#{:const} (:op expr))\n         ((some-fn nil? r/TCResult?) expected)]\n   :post [(-> % u/expr-type r/TCResult?)]}\n  (binding [vs/*current-expr* expr]\n    (let [inferred-ret (r/ret (const/constant-type val)\n                              (filter-for-value val)\n                              obj/-empty\n                              (flow-for-value))]\n      (assoc expr\n             u/expr-type (below/maybe-check-below inferred-ret expected)))))", :ns "clojure.core.typed.check.value", :name "check-value", :file "clojure/core/typed/check/value.clj", :column 1, :line 24, :arglists ([{:keys [val], :as expr} expected])}