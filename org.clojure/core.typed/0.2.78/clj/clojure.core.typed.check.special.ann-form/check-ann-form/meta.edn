{:type :fn, :src "(defn check-ann-form\n  [check {:keys [statements env] frm :ret :as expr} expected]\n  {:pre [(#{3} (count statements))]}\n  (let [[_ _ texpr] statements\n        tsyn (ast-u/map-expr-at texpr :type)\n        parsed-t (binding [vs/*current-env* env\n                           prs/*parse-type-in-ns* (cu/expr-ns expr)]\n                   (prs/parse-type tsyn))\n        cret (check frm \n                    (or (when expected\n                          (assoc expected :t parsed-t))\n                        (r/ret parsed-t\n                               ;; TODO let users add expected filters\n                               (fo/-FS fl/-top fl/-top)\n                               obj/-empty\n                               (r/-flow fl/-top))))]\n    (assoc expr\n           :ret cret\n           u/expr-type (binding [vs/*current-expr* expr\n                                 vs/*current-env* env]\n                         (below/maybe-check-below\n                           (u/expr-type cret)\n                           expected)))))", :ns "clojure.core.typed.check.special.ann-form", :name "check-ann-form", :file "clojure/core/typed/check/special/ann_form.clj", :column 1, :line 14, :arglists ([check {:keys [statements env], frm :ret, :as expr} expected])}