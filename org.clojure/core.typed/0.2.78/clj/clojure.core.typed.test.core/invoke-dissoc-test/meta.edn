{:type :fn, :src "(deftest invoke-dissoc-test\n  ; complete dissocs\n  (equal-types (dissoc {} :a)\n               (HMap :mandatory {} :complete? true))\n  \n  (equal-types (dissoc {:a 6} :a)\n               (HMap :mandatory {} :complete? true))\n  \n  (equal-types (dissoc {:a 6 :b 7} :a)\n               (HMap :mandatory {:b '7} :complete? true))\n  \n  (equal-types (dissoc {:a 6 :b 7} :a :b)\n               (HMap :mandatory {} :complete? true))\n  \n  (equal-types (dissoc {:a 6 :b 7 :c 8} :a :b)\n               (HMap :mandatory {:c (Value 8)} :complete? true))\n  \n  ; incomplete dissocs\n  (equal-types (dissoc (clojure.core.typed/ann-form {} (HMap)) :a)\n               (HMap :absent-keys #{:a}))\n  \n  (equal-types (dissoc (clojure.core.typed/ann-form {} (HMap :optional {:a String})) :a)\n               (HMap :absent-keys #{:a}))\n  \n  (equal-types (dissoc (clojure.core.typed/ann-form {} (HMap :optional {:a String})) :b)\n               (HMap :optional {:a String} :absent-keys #{:b}))\n  \n  (equal-types (dissoc (clojure.core.typed/ann-form {:b 7} (HMap :mandatory {:b '7} :optional {:a String})) :a)\n               (HMap :mandatory {:b (Value 7)} :absent-keys #{:a}))\n  \n  (equal-types (dissoc (clojure.core.typed/ann-form {:b 7} (HMap :optional {:a String :c String})) :a :b)\n               (HMap :optional {:c String} :absent-keys #{:a :b})))", :ns "clojure.core.typed.test.core", :name "invoke-dissoc-test", :file "clojure/core/typed/test/core.clj", :column 1, :line 2006, :test #<core$fn__28561 clojure.core.typed.test.core$fn__28561@3ef2de86>}