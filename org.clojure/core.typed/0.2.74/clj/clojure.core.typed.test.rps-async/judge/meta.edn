{:ns "clojure.core.typed.test.rps-async", :name "judge", :file "clojure/core/typed/test/rps_async.clj", :type :fn, :src "(defn judge\n  \"Given two channels on which players report moves, create and return an\n  output channel to report the results of each match as [move1 move2 winner].\"\n  [p1 p2]\n  (let [out (ta/chan :- RPSResult)]\n    (ta/go\n      (while true\n        (let [m1 (a/<! p1)\n              m2 (a/<! p2)]\n          (assert m1)\n          (assert m2)\n          (a/>! out (t/ann-form [m1 m2 (winner m1 m2)]\n                                RPSResult)))))\n    out))", :column 1, :line 56, :arglists ([p1 p2]), :doc "Given two channels on which players report moves, create and return an\n  output channel to report the results of each match as [move1 move2 winner]."}