{:type :fn, :src "(deftype state-transformer [m v mv f alts]\n  clojure.lang.IFn\n  (invoke [_ s]\n    (cond\n     alts (plus (clojure.core/map #(% s) alts))\n     f (bind (mv s)\n             (fn [[v ss]]\n               ((f v) ss)))\n     :else (if (= v (zero (m nil)))\n             v\n             (m [v s]))))\n\n  Monad\n  (do-result [_ v]\n    (state-transformer. m v nil nil nil))\n  (bind [mv f]\n    (state-transformer. m nil mv f nil))\n\n  MonadZero\n  (zero [_]\n    (state-transformer. m nil\n                        (fn [s] (zero (m nil)))\n                        (fn [v]\n                          (state-transformer. m v nil nil nil))\n                        nil))\n  (plus-step [mv mvs]\n    (state-transformer. m nil nil nil (cons mv mvs))))", :ns "clojure.core.typed.test.protocol-monads", :name "->state-transformer", :file "clojure/core/typed/test/protocol_monads.clj", :column 1, :line 421, :arglists ([m v mv f alts]), :doc "Positional factory function for class clojure.core.typed.test.protocol_monads.state-transformer."}