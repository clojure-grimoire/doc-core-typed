{:type :fn, :src "(defn cs-gen-filter-set [V X Y s t]\n  {:pre [((con/set-c? symbol?) V)\n         (every? (con/hash-c? symbol? r/Bounds?) [X Y])\n         (fr/FilterSet? s)\n         (fr/FilterSet? t)]\n   :post [(cr/cset? %)]}\n  (cond\n    (= s t) (cr/empty-cset X Y)\n    :else\n    (let [{s+ :then s- :else} s\n          {t+ :then t- :else} t]\n      (cset-meet (cs-gen-filter V X Y s+ t+)\n                 (cs-gen-filter V X Y s- t-)))))", :ns "clojure.core.typed.cs-gen", :name "cs-gen-filter-set", :file "clojure/core/typed/cs_gen.clj", :column 1, :line 885, :arglists ([V X Y s t])}