{:type :fn, :src "(defn demote-F [V X Y {:keys [name] :as S} T]\n  {:pre [(r/F? S)]}\n  ;constrain T to be below S (but don't mention V)\n  (assert (contains? X name) (str X name))\n  (when (and (r/F? T)\n             (denv/bound-index? (:name T))\n             (not (free-ops/free-in-scope (:name T))))\n    (fail! S T))\n  (let [dt (prmt/demote-var T V)\n        bnd (X name)\n        _ (assert bnd)]\n    (-> (cr/empty-cset X Y)\n      (insert-constraint name (r/Bottom) dt bnd))))", :ns "clojure.core.typed.cs-gen", :name "demote-F", :file "clojure/core/typed/cs_gen.clj", :column 1, :line 1065, :arglists ([V X Y {:keys [name], :as S} T])}