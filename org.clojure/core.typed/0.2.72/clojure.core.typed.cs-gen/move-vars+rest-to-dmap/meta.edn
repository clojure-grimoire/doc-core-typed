{:type :fn, :src "(defn move-vars+rest-to-dmap [cset dbound vars & {:keys [exact]}]\n  {:pre [(cr/cset? cset)\n         (symbol? dbound)\n         (every? symbol? vars)\n         ((some-fn nil? true?) exact)]\n   :post [(cr/cset? %)]}\n  (mover cset dbound vars\n         (fn [cmap dmap]\n           ((if exact cr/->dcon-exact cr/->dcon)\n              (doall\n                (for [v vars]\n                  (if-let [c (cmap v)]\n                    c\n                    (err/int-error (str \"No constraint for new var \" v)))))\n              (if-let [c ((:map dmap) dbound)]\n                (cond\n                  (and (cr/dcon? c)\n                       (not (:fixed c))) (:rest c)\n                  (and (cr/dcon-exact? c)\n                       (not (:fixed c))) (:rest c)\n                  :else (err/int-error (str \"did not a get a rest-only dcon when moving to the dmap\")))\n                (err/int-error (str \"No constraint for bound \" dbound)))))))", :ns "clojure.core.typed.cs-gen", :name "move-vars+rest-to-dmap", :file "clojure/core/typed/cs_gen.clj", :column 1, :line 1190, :arglists ([cset dbound vars & {:keys [exact]}])}