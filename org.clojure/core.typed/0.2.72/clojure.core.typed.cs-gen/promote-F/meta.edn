{:type :fn, :src "(defn promote-F [V X Y S {:keys [name] :as T}]\n  {:pre [(r/F? T)]}\n  ;T is an F\n  ;S is any Type\n  ;constrain T to be above S (but don't mention V)\n  (assert (contains? X name) (str X T))\n  (when (and (r/F? S)\n             (denv/bound-index? (:name S))\n             (not (free-ops/free-in-scope (:name S))))\n    (fail! S T))\n  (let [ps (prmt/promote-var S V)\n        bnd (X name)\n        _ (assert bnd)]\n    (-> (cr/empty-cset X Y)\n      (insert-constraint name ps r/-any bnd))))", :ns "clojure.core.typed.cs-gen", :name "promote-F", :file "clojure/core/typed/cs_gen.clj", :column 1, :line 1080, :arglists ([V X Y S {:keys [name], :as T}])}