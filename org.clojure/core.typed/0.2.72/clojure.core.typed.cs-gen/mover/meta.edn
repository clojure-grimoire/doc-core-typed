{:type :fn, :src "(defn mover [cset dbound vars f]\n  {:pre [(cr/cset? cset)\n         (symbol? dbound)\n         (every? symbol? vars)]\n   :post [(cr/cset? %)]}\n  (cr/->cset (map\n               (t/fn [{cmap :fixed dmap :dmap} :- cset-entry]\n                 (cr/->cset-entry (apply dissoc cmap dbound vars)\n                                  (dmap-meet \n                                    (singleton-dmap \n                                      dbound\n                                      (f cmap dmap))\n                                    (cr/->dmap (dissoc (:map dmap) dbound)))))\n               (:maps cset))))", :ns "clojure.core.typed.cs-gen", :name "mover", :file "clojure/core/typed/cs_gen.clj", :column 1, :line 1129, :arglists ([cset dbound vars f])}