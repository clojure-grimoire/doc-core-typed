{:type :fn, :src "(defn c-meet \n  ([c1 c2] (c-meet c1 c2 nil))\n  ([{S  :S X  :X T  :T bnds  :bnds :as c1}\n    {S* :S X* :X T* :T bnds* :bnds :as c2}\n    var]\n   (when-not (or var (= X X*))\n     (err/int-error (str \"Non-matching vars in c-meet:\" X X*)))\n   (when-not (= bnds bnds*)\n     (err/int-error (str \"Non-matching bounds in c-meet:\" bnds bnds*)))\n   (let [S (join S S*)\n         ;_ (prn \"S\" (prs/unparse-type S))\n         T (meet T T*)\n         ;_ (prn \"T\" (prs/unparse-type S))\n         ]\n     (when-not (subtype? S T)\n       (fail! S T))\n     (cr/->c S (or var X) T bnds))))", :ns "clojure.core.typed.cs-gen", :name "c-meet", :file "clojure/core/typed/cs_gen.clj", :column 1, :line 82, :arglists ([c1 c2] [{S :S, X :X, T :T, bnds :bnds, :as c1} {S* :S, X* :X, T* :T, bnds* :bnds, :as c2} var])}