{:type :macro, :src "(defmacro with-free-mappings\n  [frees-map & body]\n  `(let [frees-map# ~frees-map\n         _# (assert (frees-map? frees-map#)\n                    frees-map#)\n         scoped-names# (keys frees-map#)\n         fresh-names# (map (comp :name :F) (vals frees-map#))\n         bndss# (map :bnds (vals frees-map#))]\n     (tvar/with-extended-new-tvars scoped-names# fresh-names#\n       (bnds/with-extended-bnds fresh-names# bndss#\n         ~@body))))", :macro true, :ns "clojure.core.typed.free-ops", :name "with-free-mappings", :file "clojure/core/typed/free_ops.clj", :column 1, :line 66, :arglists ([frees-map & body])}