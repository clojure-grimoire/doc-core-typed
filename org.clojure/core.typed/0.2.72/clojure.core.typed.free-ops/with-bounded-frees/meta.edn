{:ns "clojure.core.typed.free-ops", :name "with-bounded-frees", :file "clojure/core/typed/free_ops.clj", :type :macro, :src "(defmacro with-bounded-frees\n  \"Scopes bfrees, a map of instances of F to their bounds, inside body.\"\n  [bfrees & body]\n  `(let [bfrees# ~bfrees\n         _# (assert (bounded-frees? bfrees#)\n                    bfrees#)]\n     (with-free-mappings (into {} (for [[f# bnds#] bfrees#]\n                                    [(:name f#) {:F f# :bnds bnds#}]))\n       ~@body)))", :column 1, :line 80, :macro true, :arglists ([bfrees & body]), :doc "Scopes bfrees, a map of instances of F to their bounds, inside body."}