{:type :fn, :src "(u/def-type DataType [the-class variances poly? fields record?]\n  \"A Clojure datatype\"\n  [(or (nil? variances)\n       (and (seq variances)\n            (every? variance? variances)))\n   (or (nil? poly?)\n       (and (seq poly?)\n            (every? Type? poly?)))\n   (= (count variances) (count poly?))\n   (symbol? the-class)\n   ((con/array-map-c? symbol? (some-fn Scope? Type?)) fields)\n   (con/boolean? record?)]\n  :methods\n  [p/TCType])", :ns "clojure.core.typed.type-rep", :name "DataType-maker", :file "clojure/core/typed/type_rep.clj", :column 1, :line 259, :arglists ([the-class variances poly? fields record? & {meta__2330__auto__ :meta, :as opt__2331__auto__}])}