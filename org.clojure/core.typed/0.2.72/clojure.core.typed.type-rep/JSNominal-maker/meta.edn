{:type :fn, :src "(u/def-type JSNominal [variances poly? name]\n  \"A Javascript nominal type\"\n  [(or (nil? variances)\n       (and (seq variances)\n            (sequential? variances)\n            (every? variance? variances)))\n   (= (count variances) (count poly?))\n   (or (nil? poly?)\n       (and (seq poly?)\n            (sequential? poly?)\n            (every? Type? poly?)))\n   (symbol? name)]\n  :methods\n  [p/TCType])", :ns "clojure.core.typed.type-rep", :name "JSNominal-maker", :file "clojure/core/typed/type_rep.clj", :column 1, :line 239, :arglists ([variances poly? name & {meta__2330__auto__ :meta, :as opt__2331__auto__}])}