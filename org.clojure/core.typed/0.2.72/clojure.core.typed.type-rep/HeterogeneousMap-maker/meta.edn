{:type :fn, :src "(u/def-type HeterogeneousMap [types optional absent-keys other-keys?]\n  \"A constant map, clojure.lang.IPersistentMap\"\n  [((con/hash-c? Value? (some-fn Type? Result?))\n     types)\n   ((con/hash-c? Value? (some-fn Type? Result?))\n     optional)\n   ((con/set-c? Value?) absent-keys)\n   (empty? (set/intersection\n             (set (keys types))\n             (set (keys optional))\n             absent-keys))\n   (con/boolean? other-keys?)]\n  :methods\n  [p/TCType])", :ns "clojure.core.typed.type-rep", :name "HeterogeneousMap-maker", :file "clojure/core/typed/type_rep.clj", :column 1, :line 425, :arglists ([types optional absent-keys other-keys? & {meta__2330__auto__ :meta, :as opt__2331__auto__}])}