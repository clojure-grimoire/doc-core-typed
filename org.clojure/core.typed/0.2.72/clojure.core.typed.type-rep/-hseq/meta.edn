{:type :fn, :src "(defn -hseq\n  [types & {:keys [filters objects rest drest]}]\n  (if (some Bottom? types)\n    (Bottom)\n    (HeterogeneousSeq-maker types\n                            (if filters\n                              (vec filters)\n                              (vec (repeat (count types) (ind/-FS (ind/-top-fn) \n                                                                  (ind/-top-fn)))))\n                            (if objects\n                              (vec objects)\n                              (vec (repeat (count types) (ind/-empty-fn))))\n                            rest\n                            drest)))", :ns "clojure.core.typed.type-rep", :name "-hseq", :file "clojure/core/typed/type_rep.clj", :column 1, :line 533, :arglists ([types & {:keys [filters objects rest drest]}])}