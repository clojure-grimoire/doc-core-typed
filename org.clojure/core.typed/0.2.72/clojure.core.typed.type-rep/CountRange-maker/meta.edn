{:type :fn, :src "(u/def-type CountRange [lower upper]\n  \"A sequence of count between lower (inclusive) and upper (inclusive).\n  If upper is nil, between lower and infinity.\"\n  [(con/znat? lower)\n   (or (nil? upper)\n       (and (con/znat? upper)\n            (<= lower upper)))]\n  :methods\n  [p/TCType])", :ns "clojure.core.typed.type-rep", :name "CountRange-maker", :file "clojure/core/typed/type_rep.clj", :column 1, :line 762, :arglists ([lower upper & {meta__2330__auto__ :meta, :as opt__2331__auto__}])}