{:type :fn, :src "(u/def-type Function [dom rng rest drest kws]\n  \"A function arity, must be part of an intersection\"\n  [(or (nil? dom)\n       (sequential? dom))\n   (every? Type? dom)\n   (Result? rng)\n   ;at most one of rest drest or kws can be provided\n   (#{0 1} (count (filter identity [rest drest kws])))\n   (or (nil? rest)\n       (Type? rest))\n   (or (nil? drest)\n       (DottedPretype? drest))\n   (or (nil? kws)\n       (KwArgs? kws))]\n  :methods\n  [p/TCAnyType])", :ns "clojure.core.typed.type-rep", :name "Function-maker", :file "clojure/core/typed/type_rep.clj", :column 1, :line 727, :arglists ([dom rng rest drest kws & {meta__2330__auto__ :meta, :as opt__2331__auto__}])}