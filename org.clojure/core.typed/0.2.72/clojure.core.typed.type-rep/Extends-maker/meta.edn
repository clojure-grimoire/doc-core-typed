{:type :fn, :src "(u/def-type Extends [extends without]\n  \"A set of ancestors that always and never occur.\"\n  [(every? Type? extends)\n   (set? extends)\n   (sorted? extends)\n   (seq extends)\n   (every? Type? without)\n   (set? without)\n   (sorted? without)]\n  :methods\n  [p/TCType])", :ns "clojure.core.typed.type-rep", :name "Extends-maker", :file "clojure/core/typed/type_rep.clj", :column 1, :line 839, :arglists ([extends without & {meta__2330__auto__ :meta, :as opt__2331__auto__}])}