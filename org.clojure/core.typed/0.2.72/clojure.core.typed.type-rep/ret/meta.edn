{:type :fn, :src "(defn ret\n  \"Convenience function for returning the type of an expression\"\n  ([t] \n   (ret t (ind/-FS (ind/-top-fn) (ind/-top-fn)) (ind/-empty-fn) (-flow (ind/-top-fn))))\n  ([t f] \n   (ret t f (ind/-empty-fn) (-flow (ind/-top-fn))))\n  ([t f o] \n   (ret t f o (-flow (ind/-top-fn))))\n  ([t f o flow]\n   {:pre [(AnyType? t)\n          (p/IFilterSet? f)\n          (p/IRObject? o)\n          (FlowSet? flow)]\n    :post [(TCResult? %)]}\n   (TCResult-maker t f o flow)))", :ns "clojure.core.typed.type-rep", :name "ret", :file "clojure/core/typed/type_rep.clj", :column 1, :line 939, :arglists ([t] [t f] [t f o] [t f o flow]), :doc "Convenience function for returning the type of an expression"}