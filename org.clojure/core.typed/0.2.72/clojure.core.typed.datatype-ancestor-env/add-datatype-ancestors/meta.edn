{:ann [t/Sym (t/Set r/Type) -> nil], :ns "clojure.core.typed.datatype-ancestor-env", :name "add-datatype-ancestors", :file "clojure/core/typed/datatype_ancestor_env.clj", :type :fn, :src "(defn ^:no-check ^{:ann '[t/Sym (t/Set r/Type) -> nil]}\n  add-datatype-ancestors \n  \"Add a set of ancestor overrides for the datatype named sym.\"\n  [sym tset]\n  (assert-dt-ancestors)\n  (t/when-let-fail [a *current-dt-ancestors*]\n    (swap! a update-in [sym] #(set/union (or % #{}) tset)))\n  nil)", :column 1, :line 72, :arglists ([sym tset]), :doc "Add a set of ancestor overrides for the datatype named sym.", :no-check true}