{:type :fn, :src "(deftest parse-fn-test\n  (is (= (:fn (internal/parse-fn* false '([a b c] a)))\n         (:fn (internal/parse-fn* false '([a :- clojure.core.typed/Any b c] a)))\n         (:fn (internal/parse-fn* false '([a :- clojure.core.typed/Any b :- clojure.core.typed/Any c] a)))\n         (:fn (internal/parse-fn* false '([a :- clojure.core.typed/Any b c :- clojure.core.typed/Any] a)))\n         (:fn (internal/parse-fn* false '([a :- clojure.core.typed/Any b :- clojure.core.typed/Any c :- clojure.core.typed/Any] a)))\n         (:fn (internal/parse-fn* false '([a :- clojure.core.typed/Any b :- clojure.core.typed/Any c :- clojure.core.typed/Any] :- clojure.core.typed/Any a)))\n         '(clojure.core/fn ([a b c] a))))\n  (is (= (:fn (internal/parse-fn* false '([a] a)))\n         (:fn (internal/parse-fn* false '([a :- clojure.core.typed/Any] a)))\n         (:fn (internal/parse-fn* false '([a :- clojure.core.typed/Any] :- clojure.core.typed/Any a)))\n         (:fn (internal/parse-fn* false '([a] :- clojure.core.typed/Any a)))\n         '(clojure.core/fn ([a] a))))\n  (is (= (internal/parse-fn* false '(name [a] :- clojure.core.typed/Any a))\n         {:fn '(clojure.core/fn name ([a] a))\n          :ann [{:dom [{:default true :type 'clojure.core.typed/Any}]\n                 :ret-type {:type 'clojure.core.typed/Any}}]}))\n  (is (= (:fn (internal/parse-fn* false '([a :- Number] a)))\n         (:fn (internal/parse-fn* false '([a :- Number] :- clojure.core.typed/Any a)))\n         '(clojure.core/fn ([a] a))))\n  (is (= (internal/parse-fn* false '(name [a :- Number] :- clojure.core.typed/Any a))\n         {:fn '(clojure.core/fn name ([a] a))\n          :ann [{:dom [{:type 'Number}]\n                 :ret-type {:type 'clojure.core.typed/Any}}]}))\n  (is (= (internal/parse-fn* false '([a :- Number] :- Number a))\n         {:fn '(clojure.core/fn ([a] a))\n          :ann [{:dom [{:type 'Number}]\n                 :ret-type {:type 'Number}}]}))\n  (is (= (:fn (internal/parse-fn* false '([a & b] a)))\n         (:fn (internal/parse-fn* false '([a :- clojure.core.typed/Any & b] a)))\n         (:fn (internal/parse-fn* false '([a :- clojure.core.typed/Any & b :- clojure.core.typed/Any *] :- clojure.core.typed/Any a)))\n         (:fn (internal/parse-fn* false '([a :- clojure.core.typed/Any & b] :- clojure.core.typed/Any a)))\n         (:fn (internal/parse-fn* false '([a :- clojure.core.typed/Any & b] :- clojure.core.typed/Any a)))\n         (:fn (internal/parse-fn* false '([a :- clojure.core.typed/Any & b] :- clojure.core.typed/Any a)))\n         '(clojure.core/fn ([a & b] a))))\n  (is (= (internal/parse-fn* false '([a :- Number & b :- Number *] :- Number b))\n         {:fn '(clojure.core/fn ([a & b] b))\n          :ann [{:dom [{:type 'Number}]\n                 :rest {:type 'Number}\n                 :ret-type {:type 'Number}}]}))\n  (is (= (internal/parse-fn* false '([a & b :- Number ... x] a))\n         {:fn '(clojure.core/fn ([a & b] a))\n          :ann [{:dom [{:default true :type 'clojure.core.typed/Any}]\n                 :drest {:bound 'x\n                         :pretype {:type 'Number}}\n                 :ret-type {:default true :type 'clojure.core.typed/Any}}]}))\n\n  (is (= (internal/parse-fn* false '([a :- clojure.core.typed/Any & b :- Number ... x] a))\n         {:fn '(clojure.core/fn ([a & b] a))\n          :ann [{:dom [{:type 'clojure.core.typed/Any}]\n                 :drest {:bound 'x\n                         :pretype {:type 'Number}}\n                 :ret-type {:default true :type 'clojure.core.typed/Any}}]}))\n  (is (= (internal/parse-fn* false '([a :- clojure.core.typed/Any & b :- Number ... x] :- clojure.core.typed/Any a))\n         {:fn '(clojure.core/fn ([a & b] a))\n          :ann [{:dom [{:type 'clojure.core.typed/Any}]\n                 :drest {:bound 'x\n                         :pretype {:type 'Number}}\n                 :ret-type {:type 'clojure.core.typed/Any}}]}))\n  (is (= (-> (internal/parse-fn* false '(^long [b]))\n             :fn second first meta)\n         '{:tag long})))", :ns "clojure.core.typed.test.internal-test", :name "parse-fn-test", :file "clojure/core/typed/test/internal_test.clj", :column 1, :line 7, :test #<internal_test$fn__30676 clojure.core.typed.test.internal_test$fn__30676@79833638>}