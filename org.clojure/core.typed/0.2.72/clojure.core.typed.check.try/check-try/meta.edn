{:type :fn, :src "(defn check-try [check {:keys [body catches finally] :as expr} expected]\n  (let [chk #(check % expected)\n        cbody (chk body)\n        ccatches (mapv chk catches)\n        ; finally result is thrown away\n        cfinally (when finally\n                   (check finally))]\n    (assoc expr\n           :body cbody\n           :catches ccatches\n           :finally cfinally\n           u/expr-type (r/ret (apply c/Un (-> cbody u/expr-type r/ret-t) \n                                     (map (comp r/ret-t u/expr-type) ccatches))))))", :ns "clojure.core.typed.check.try", :name "check-try", :file "clojure/core/typed/check/try.clj", :column 1, :line 7, :arglists ([check {:keys [body catches finally], :as expr} expected])}