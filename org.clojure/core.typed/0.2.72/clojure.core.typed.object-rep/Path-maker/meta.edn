{:type :fn, :src "(u/def-object Path [path id]\n  \"A path to a variable. Paths grow to the right, with leftmost\n  pathelem being applied first (think of -> threading operator).\"\n  [(or (and (seq path)\n            (sequential? path))\n       (nil? path))\n   (every? pr/PathElem? path)\n   (fr/name-ref? id)]\n  :methods\n  [p/IRObject])", :ns "clojure.core.typed.object-rep", :name "Path-maker", :file "clojure/core/typed/object_rep.clj", :column 1, :line 47, :arglists ([path id & {meta__2330__auto__ :meta, :as opt__2331__auto__}])}