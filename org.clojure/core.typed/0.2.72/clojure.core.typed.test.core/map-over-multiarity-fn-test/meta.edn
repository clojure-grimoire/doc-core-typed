{:type :fn, :src "(deftest map-over-multiarity-fn-test\n  (is-cf (map (clojure.core.typed/ann-form + [Number -> Number]) \n              (clojure.core.typed/ann-form [] (clojure.lang.Seqable Number))))\n  (is-cf (map inc [(or (first (range)) 0) 1])\n         (clojure.lang.Seqable clojure.core.typed/AnyInteger))\n  (is-cf (fn [x] (map (clojure.core.typed/ann-form inc [Number -> Number]) [x 1]))\n         [Number -> (clojure.lang.Seqable Number)])\n  (is-clj (subtype? (ret-t (tc-t [(or (first (range)) 2) 1]))\n                    (RClass-of Seqable [(RClass-of Number)])))\n  (is-cf (fn [x] \n           (map (clojure.core.typed/ann-form inc [Number -> Number]) \n                [x 2 3])) \n         [Number -> (clojure.core.typed/Seq Number)]))", :ns "clojure.core.typed.test.core", :name "map-over-multiarity-fn-test", :file "clojure/core/typed/test/core.clj", :column 1, :line 1584, :test #<core$fn__25739 clojure.core.typed.test.core$fn__25739@64303a77>}