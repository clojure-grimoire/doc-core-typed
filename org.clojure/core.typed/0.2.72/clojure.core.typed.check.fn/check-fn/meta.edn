{:type :fn, :src "(defn check-fn \n  \"Check a fn to be under expected and annotate the inferred type\"\n  [{:keys [methods] :as fexpr} expected]\n  {:pre [(r/TCResult? expected)]\n   :post [(-> % u/expr-type r/TCResult?)\n          (vector? (::t/cmethods %))]}\n  (let [{:keys [cmethods fni]} (fn-methods/check-fn-methods \n                                 methods \n                                 (r/ret-t expected)\n                                 :self-name (cu/fn-self-name fexpr))]\n    (assoc fexpr\n           ::t/cmethods cmethods\n           u/expr-type  (r/ret fni\n                           (fo/-FS fl/-top fl/-bot) \n                           obj/-empty))))", :ns "clojure.core.typed.check.fn", :name "check-fn", :file "clojure/core/typed/check/fn.clj", :column 1, :line 16, :arglists ([{:keys [methods], :as fexpr} expected]), :doc "Check a fn to be under expected and annotate the inferred type"}