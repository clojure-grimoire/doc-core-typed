{:type :fn, :src "(defn add-rclass-ancestors [rsym names as]\n  {:pre [(symbol? rsym)]}\n  (let [nas (r/sorted-type-set\n              (for [u as]\n                (c/abstract-many names u)))]\n    (swap! RCLASS-ANCESTORS-ENV\n           (fn [env]\n             (if (contains? env rsym)\n               (update-in env [rsym :ancestors]\n                          #(set/union nas (or % #{})))\n               (assoc env rsym {:ancestors nas\n                                :replacements {}}))))\n    nil))", :ns "clojure.core.typed.rclass-ancestor-env", :name "add-rclass-ancestors", :file "clojure/core/typed/rclass_ancestor_env.clj", :column 1, :line 59, :arglists ([rsym names as])}