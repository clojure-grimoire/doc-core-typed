{:type :fn, :src "(defn add-rclass-replacements [rsym names as]\n  {:pre [(symbol? rsym)]}\n  (let [nrp (into {}\n                  (for [[k v] as]\n                    [k (c/abstract-many names v)]))]\n    (swap! RCLASS-ANCESTORS-ENV\n           (fn [e]\n             (if (contains? e rsym)\n               (update-in e [rsym :replacements]\n                          merge nrp)\n               (assoc e rsym {:ancestors (r/sorted-type-set #{})\n                              :replacements nrp}))))\n    nil))", :ns "clojure.core.typed.rclass-ancestor-env", :name "add-rclass-replacements", :file "clojure/core/typed/rclass_ancestor_env.clj", :column 1, :line 74, :arglists ([rsym names as])}