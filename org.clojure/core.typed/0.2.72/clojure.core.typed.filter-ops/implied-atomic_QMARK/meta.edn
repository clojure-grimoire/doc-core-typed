{:type :fn, :src "(defn implied-atomic? [f1 f2]\n  (let [subtype? @(subtype?-var)]\n    (if (= f1 f2)\n      true\n      (cond\n        (fr/OrFilter? f1) (boolean (some #(u/filter= % f2) (:fs f1)))\n        (and (fr/TypeFilter? f1)\n             (fr/TypeFilter? f2)) (and (= (:id f1) (:id f2))\n                                       (= (:path f1) (:path f2))\n                                       (subtype? (:type f2) (:type f1)))\n        (and (fr/NotTypeFilter? f1)\n             (fr/NotTypeFilter? f2)) (and (= (:id f1) (:id f2))\n                                          (= (:path f1) (:path f2))\n                                          (subtype? (:type f1) (:type f2)))\n        :else false))))", :ns "clojure.core.typed.filter-ops", :name "implied-atomic?", :file "clojure/core/typed/filter_ops.clj", :column 1, :line 429, :arglists ([f1 f2])}