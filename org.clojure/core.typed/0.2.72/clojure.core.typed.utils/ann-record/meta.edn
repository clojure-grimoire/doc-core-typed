{:ns "clojure.core.typed.utils", :name "ann-record", :file "clojure/core/typed/utils.clj", :type :macro, :src "(defmacro ann-record \n  \"Like ann-record, but also adds an unchecked annotation for core.contract's generated\n  nme? predicate.\"\n  [nme & args]\n  `(do ~(-> `(clojure.core.typed/ann-record ~nme ~@args)\n            (with-meta (meta &form)))\n       ~(-> `(clojure.core.typed/ann ~(with-meta (symbol (str nme \"-maker\")) {:no-check true})\n                                     [~@(map #(nth % 2) (partition 3 (first args))) ~'-> ~nme])\n            (with-meta (meta &form)))\n       ~(-> `(clojure.core.typed/ann ~(with-meta (symbol (str nme \"?\")) {:no-check true}) ~(list `t/Pred nme))\n            (with-meta (meta &form)))))", :column 1, :line 97, :macro true, :arglists ([nme & args]), :doc "Like ann-record, but also adds an unchecked annotation for core.contract's generated\n  nme? predicate."}