{:type :fn, :src "(defn parse-free-binder [[nme & {:keys [variance < > kind] :as opts}]]\n  (when-not (symbol? nme)\n    (err/int-error \"First entry in free binder should be a name symbol\"))\n  {:nme nme :variance (or variance :invariant)\n   :bound (r/Bounds-maker\n            ;upper\n            (when-not kind\n              (if (contains? opts :<)\n                (parse-type <)\n                r/-any))\n            ;lower\n            (when-not kind\n              (if (contains? opts :>)\n                (parse-type >)\n                r/-nothing))\n            ;kind\n            (when kind\n              (parse-type kind)))})", :ns "clojure.core.typed.parse-unparse", :name "parse-free-binder", :file "clojure/core/typed/parse_unparse.clj", :column 1, :line 454, :arglists ([[nme & {:keys [variance < > kind], :as opts}]])}