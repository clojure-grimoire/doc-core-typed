{:type :fn, :src "(defn parse-HVec [[_ syn & opts]]\n  (let [_ (when-not (vector? syn)\n            (err/int-error \"First argument to HVec must be a vector\"))\n        _ (when-not (even? (count opts))\n            (err/int-error \"Uneven keyword arguments to HVec\"))\n        {:keys [filter-sets objects]} opts\n        {:keys [fixed drest rest]} (parse-hvec-types syn)]\n    (r/-hvec fixed\n             :filters (when filter-sets\n                        (mapv parse-filter-set filter-sets))\n             :objects (when objects\n                        (mapv parse-object objects))\n             :drest drest\n             :rest rest)))", :ns "clojure.core.typed.parse-unparse", :name "parse-HVec", :file "clojure/core/typed/parse_unparse.clj", :column 1, :line 548, :arglists ([[_ syn & opts]])}