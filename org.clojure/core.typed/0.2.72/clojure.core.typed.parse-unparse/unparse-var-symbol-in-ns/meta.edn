{:type :fn, :src "(defn unparse-var-symbol-in-ns [sym]\n  {:pre [(namespace sym)]\n   :post [(symbol? %)]}\n  (if-let [ns (and (not vs/*verbose-types*)\n                   (some-> *unparse-type-in-ns* find-ns))]\n        ; use unqualified name if interned\n    (or (var-symbol-intern sym ns)\n        ; use aliased ns if not interned, but ns is aliased\n        (impl/impl-case\n          :clojure\n          (when-let [alias (alias-in-ns (namespace sym) ns)]\n            (symbol (str alias) (name sym)))\n          :cljs nil)\n        ; otherwise use fully qualified name\n        sym)\n    sym))", :ns "clojure.core.typed.parse-unparse", :name "unparse-var-symbol-in-ns", :file "clojure/core/typed/parse_unparse.clj", :column 1, :line 1235, :arglists ([sym])}