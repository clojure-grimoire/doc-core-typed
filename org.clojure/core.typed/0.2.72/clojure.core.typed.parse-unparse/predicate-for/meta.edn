{:type :fn, :src "(defn predicate-for [on-type]\n  (let [RClass-of @(RClass-of-var)]\n    (r/make-FnIntersection\n      (r/make-Function [r/-any] \n        (impl/impl-case\n          :clojure (RClass-of Boolean)\n          :cljs    (r/BooleanCLJS-maker))\n        nil nil\n        :filter (fl/-FS (fl/-filter on-type 0)\n                        (fl/-not-filter on-type 0))))))", :ns "clojure.core.typed.parse-unparse", :name "predicate-for", :file "clojure/core/typed/parse_unparse.clj", :column 1, :line 216, :arglists ([on-type])}