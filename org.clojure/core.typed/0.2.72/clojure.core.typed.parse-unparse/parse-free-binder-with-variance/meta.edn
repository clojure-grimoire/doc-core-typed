{:type :fn, :src "(defn parse-free-binder-with-variance [binder]\n  {:post [(every? parsed-free-map? %)]}\n  (reduce (fn [fs fsyn]\n            {:pre [(every? parsed-free-map? fs)]\n             :post [(every? parsed-free-map? %)]}\n            ;(prn \"parse-free-binder-with-variance\" (map :fname fs))\n            (conj fs\n                  (free-ops/with-bounded-frees \n                    (zipmap (map (comp r/make-F :fname) fs)\n                            (map :bnd fs))\n                    (parse-free-with-variance fsyn))))\n          [] binder))", :ns "clojure.core.typed.parse-unparse", :name "parse-free-binder-with-variance", :file "clojure/core/typed/parse_unparse.clj", :column 1, :line 120, :arglists ([binder])}