{:type :fn, :src "(defn var-symbol-intern \n  \"Returns a symbol interned in ns for var symbol, or nil if none.\n\n  (var-symbol-intern 'symbol (find-ns 'clojure.core))\n  ;=> 'symbol\n  (var-symbol-intern 'bar (find-ns 'clojure.core))\n  ;=> nil\"\n  [sym ns]\n  {:pre [(symbol? sym)\n         (con/namespace? ns)]\n   :post [((some-fn nil? symbol?) %)]}\n  (some (fn [[isym var]]\n          (when (= (str sym) (str (coerce/var->symbol var)))\n            isym))\n        (merge (ns-interns ns)\n               (ns-refers ns))))", :ns "clojure.core.typed.parse-unparse", :name "var-symbol-intern", :file "clojure/core/typed/parse_unparse.clj", :column 1, :line 1205, :arglists ([sym ns]), :doc "Returns a symbol interned in ns for var symbol, or nil if none.\n\n  (var-symbol-intern 'symbol (find-ns 'clojure.core))\n  ;=> 'symbol\n  (var-symbol-intern 'bar (find-ns 'clojure.core))\n  ;=> nil"}