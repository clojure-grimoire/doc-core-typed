{:type :fn, :src "(defn parse-Value [[_Value_ syn :as all]]\n  (when-not (#{2} (count all))\n    (err/int-error (str \"Incorrect number of arguments to Value, \" (count all)\n                      \", expected 2: \" all)))\n  (impl/impl-case\n    :clojure (const/constant-type syn)\n    :cljs (cond\n            ((some-fn symbol? keyword?) syn)\n              (r/-val syn)\n            :else (assert nil \"FIXME CLJS parse Value\"))))", :ns "clojure.core.typed.parse-unparse", :name "parse-Value", :file "clojure/core/typed/parse_unparse.clj", :column 1, :line 792, :arglists ([[_Value_ syn :as all]])}