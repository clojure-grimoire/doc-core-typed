{:type :fn, :src "(defn parse-free [f]\n  {:post [((con/hvector-c? symbol? r/Bounds?) %)]}\n  (if (symbol? f)\n    [f r/no-bounds]\n    (let [[n & {:keys [< >] :as opts}] f]\n      (when (contains? opts :kind)\n        (err/deprecated-warn \"Kind annotation for TFn parameters\"))\n      (when (:variance opts) \n        (err/int-error \"Variance not supported for variables introduced with All\"))\n      [n (let [upper-or-nil (when (contains? opts :<)\n                              (parse-type <))\n               lower-or-nil (when (contains? opts :>)\n                              (parse-type >))]\n           (c/infer-bounds upper-or-nil lower-or-nil))])))", :ns "clojure.core.typed.parse-unparse", :name "parse-free", :file "clojure/core/typed/parse_unparse.clj", :column 1, :line 135, :arglists ([f])}