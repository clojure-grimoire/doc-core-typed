{:type :fn, :src "(defn parse-rec-type [[rec & [[free-symbol :as bnder] type \n                              :as args]]]\n  (when-not (== 1 (count bnder))\n    (err/int-error \"Rec type requires exactly one entry in binder\"))\n  (when-not (== 2 (count args))\n    (err/int-error \"Wrong arguments to Rec\"))\n  (let [Mu* @(Mu*-var)\n        _ (when-not (= 1 (count bnder)) \n            (err/int-error \"Only one variable allowed: Rec\"))\n        f (r/make-F free-symbol)\n        body (free-ops/with-frees [f]\n               (parse-type type))\n        \n        _ (check-forbidden-rec f body)]\n    (Mu* (:name f) body)))", :ns "clojure.core.typed.parse-unparse", :name "parse-rec-type", :file "clojure/core/typed/parse_unparse.clj", :column 1, :line 164, :arglists ([[rec & [[free-symbol :as bnder] type :as args]]])}