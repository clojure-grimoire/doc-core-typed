{:type :fn, :src "(defn parse-HSeq [[_ syn & opts]]\n  (let [{:keys [fixed drest rest]} (parse-hseq-type syn)\n        _ (when-not (even? (count opts))\n            (err/int-error \"Wrong number of keyword arguments to HSeq\"))\n        {:keys [filter-sets objects] :as opt-map} opts\n        _ (when-not (every? keyword? (keys opt-map))\n            (err/int-error \"Given non-keyword keyword arguments to HSeq\"))]\n    (r/-hseq fixed\n             :filters (when filter-sets\n                        (mapv parse-filter-set filter-sets))\n             :objects (when objects\n                        (mapv parse-object objects))\n             :drest drest\n             :rest rest)))", :ns "clojure.core.typed.parse-unparse", :name "parse-HSeq", :file "clojure/core/typed/parse_unparse.clj", :column 1, :line 627, :arglists ([[_ syn & opts]])}