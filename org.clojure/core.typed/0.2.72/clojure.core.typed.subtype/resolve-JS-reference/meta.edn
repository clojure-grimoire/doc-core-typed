{:type :fn, :src "(defn resolve-JS-reference [sym]\n  (impl/assert-cljs)\n  (cond\n    (= \"js\" (namespace sym)) (c/JSNominal-with-unknown-params sym)\n    (= \"default\" sym) (assert nil \"FIXME what is default?\")\n    (base-type sym) (base-type sym)\n    :else (let [{{:keys [protocol-symbol name]} :info} ((impl/v 'clojure.core.typed.analyze-cljs/analyze-qualified-symbol) sym)]\n            (if protocol-symbol\n              (c/Protocol-with-unknown-params name)\n              (c/DataType-with-unknown-params name)))))", :ns "clojure.core.typed.subtype", :name "resolve-JS-reference", :file "clojure/core/typed/subtype.clj", :column 1, :line 874, :arglists ([sym])}