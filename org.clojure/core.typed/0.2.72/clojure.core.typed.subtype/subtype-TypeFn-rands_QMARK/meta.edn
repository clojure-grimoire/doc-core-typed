{:type :fn, :src "(defn subtype-TypeFn-rands?\n  [tfn rands1 rands2]\n  {:pre [(r/TypeFn? tfn)\n         (every? r/Type? rands1)\n         (every? r/Type? rands2)]\n   :post [(con/boolean? %)]}\n  (and (== (count rands1)\n           (count rands2)\n           (count (:variances tfn)))\n       (every? (fn [[v l r]]\n                 {:pre [(r/variance? v)\n                        (r/Type? l)\n                        (r/Type? r)]}\n                 (case v\n                   (:covariant) (subtypeA*? *sub-current-seen* l r)\n                   (:contravariant) (subtypeA*? *sub-current-seen* r l)\n                   (:invariant) (and (subtypeA*? *sub-current-seen* l r)\n                                     (subtypeA*? *sub-current-seen* r l))\n                   (err/int-error (str \"Unknown variance: \" v))))\n               (map vector (:variances tfn) rands1 rands2))))", :ns "clojure.core.typed.subtype", :name "subtype-TypeFn-rands?", :file "clojure/core/typed/subtype.clj", :column 1, :line 1158, :arglists ([tfn rands1 rands2])}