{:ns "clojure.core.typed.test.rps-async", :name "play-many", :file "clojure/core/typed/test/rps_async.clj", :type :fn, :src "(defn play-many\n  \"Play n matches from out-chan and report a summary of the results.\"\n  [out-chan n]\n  (t/loop [remaining :- t/Int, n\n           results :- (t/Map PlayerName t/Int), {}]\n    (if (zero? remaining)\n      results\n      (let [[m1 m2 winner] (a/<!! out-chan)]\n        (assert m1)\n        (assert m2)\n        (assert winner)\n        (recur (dec remaining)\n               (merge-with + results {winner 1}))))))", :column 1, :line 98, :arglists ([out-chan n]), :doc "Play n matches from out-chan and report a summary of the results."}