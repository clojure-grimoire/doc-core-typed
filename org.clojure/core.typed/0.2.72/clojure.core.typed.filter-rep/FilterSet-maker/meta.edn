{:type :fn, :src "(u/def-filter FilterSet [then else]\n  \"A set of filters: those true when the expression is a true value, and \n  those when it is a false value.\"\n  [(and (or (BotFilter? then)\n            (and (BotFilter? else)\n               (TopFilter? then))\n            (Filter? then))\n        (or (BotFilter? else)\n            (and (BotFilter? then)\n                 (TopFilter? else))\n            (Filter? else)))]\n  :methods\n  [p/IFilter\n   p/IFilterSet\n   (then-filter [_] then)\n   (else-filter [_] else)])", :ns "clojure.core.typed.filter-rep", :name "FilterSet-maker", :file "clojure/core/typed/filter_rep.clj", :column 1, :line 135, :arglists ([then else & {meta__2330__auto__ :meta, :as opt__2331__auto__}])}