{:type :fn, :src "(defn hmap-c? [& key-vals]\n  {:pre [(even? (count key-vals))]}\n  (every-pred map?\n              (fn [m]\n                (letfn [(mandatory-check [m k vc]\n                          (and (contains? m k)\n                               (vc (get m k))))\n                        (optional-check [m k vc]\n                          (or (not (contains? m k))\n                              (mandatory-check m k vc)))]\n                  (every? identity \n                    (for [[k vc] (partition 2 key-vals)]\n                      (cond\n                        (instance? OptionalKey k) (optional-check m (:k k) vc)\n                        :else (mandatory-check m k vc))))))))", :ns "clojure.core.typed.contract-utils", :name "hmap-c?", :file "clojure/core/typed/contract_utils.clj", :column 1, :line 44, :arglists ([& key-vals])}