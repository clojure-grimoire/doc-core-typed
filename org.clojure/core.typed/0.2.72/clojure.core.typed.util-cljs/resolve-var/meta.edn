{:type :fn, :src "(defn resolve-var [nsym sym]\n  {:post [((some-fn symbol? nil?) %)]}\n  (let [unresolved? (atom false)\n        r (with-cljs-typed-env\n            (binding [ana/*cljs-ns* nsym]\n              (comp/with-core-cljs\n                (ana/resolve-var (ana/empty-env) sym\n                                 (fn [env ns sym]\n                                   (when-not (var-exists? env ns sym)\n                                     (reset! unresolved? true)))))))\n        sym* (when-not @unresolved?\n               (:name r))\n        _ (when sym*\n            (assert (symbol? sym*) sym*)\n            (assert (namespace sym*) sym*))]\n    ;(prn sym sym*)\n    sym*))", :ns "clojure.core.typed.util-cljs", :name "resolve-var", :file "clojure/core/typed/util_cljs.clj", :column 1, :line 22, :arglists ([nsym sym])}