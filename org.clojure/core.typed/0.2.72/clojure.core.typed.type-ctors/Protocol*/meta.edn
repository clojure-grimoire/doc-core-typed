{:type :fn, :src "(defn Protocol* [names variances poly? the-var on-class methods bnds\n                 & {:keys [declared?] :or {declared? false}}]\n  {:pre [(every? symbol? names)\n         (every? r/variance? variances)\n         (= (count variances) (count poly?))\n         (every? r/Type? poly?)\n         (every? r/Bounds? bnds)\n         (symbol? the-var)\n         (symbol? on-class)]\n   :post [(r/Type? %)]}\n  (let [p (r/Protocol-maker the-var (seq variances) (seq poly?) on-class methods declared?)]\n    (if (seq variances)\n      (TypeFn* names variances bnds p)\n      p)))", :ns "clojure.core.typed.type-ctors", :name "Protocol*", :file "clojure/core/typed/type_ctors.clj", :column 1, :line 629, :arglists ([names variances poly? the-var on-class methods bnds & {:keys [declared?], :or {declared? false}}])}