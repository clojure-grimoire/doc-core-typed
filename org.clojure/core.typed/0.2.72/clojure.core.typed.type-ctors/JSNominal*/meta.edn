{:type :fn, :src "(defn JSNominal* \n  ([name] (JSNominal* nil nil nil name nil))\n  ([names variances poly? name bnds]\n   {:pre [(every? symbol? names)\n          (every? r/variance? variances)\n          (= (count variances) (count poly?))\n          (every? r/Type? poly?)\n          (every? r/Bounds? bnds)\n          (symbol? name)]\n    :post [(r/Type? %)]}\n   (let [p (r/JSNominal-maker (seq variances) (seq poly?) name)]\n     (if (seq variances)\n       (TypeFn* names variances bnds p)\n       p))))", :ns "clojure.core.typed.type-ctors", :name "JSNominal*", :file "clojure/core/typed/type_ctors.clj", :column 1, :line 551, :arglists ([name] [names variances poly? name bnds])}