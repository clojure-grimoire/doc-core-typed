{:type :fn, :src "(defn PolyDots* [names bbnds body & {:keys [original-names] \n                                     :or {original-names (map (comp r/F-original-name r/make-F) names)}}]\n  {:pre [(every? symbol names)\n         (every? r/Bounds? bbnds)\n         (r/Type? body)]}\n  (assert (= (count names) (count bbnds)) \"Wrong number of names\")\n  (if (empty? names)\n    body\n    (let [v (r/PolyDots-maker (count names) \n                              (mapv (fn [bnd] \n                                      (r/visit-bounds bnd #(abstract-many names %)))\n                                    bbnds)\n                              (abstract-many names body))]\n      (with-original-names v original-names))))", :ns "clojure.core.typed.type-ctors", :name "PolyDots*", :file "clojure/core/typed/type_ctors.clj", :column 1, :line 1196, :arglists ([names bbnds body & {:keys [original-names], :or {original-names (map (comp r/F-original-name r/make-F) names)}}])}