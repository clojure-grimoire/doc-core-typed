{:type :fn, :src "(defn resolve-app* [rator rands]\n  (let [rator (fully-resolve-type rator)]\n    (cond\n      (r/Poly? rator) (do (when-not (= (count rands) (.nbound ^Poly rator))\n                            (err/int-error (str \"Wrong number of arguments provided to polymorphic type\"\n                                              (ind/unparse-type rator))))\n                          (instantiate-poly rator rands))\n      ;PolyDots NYI\n      :else (throw (Exception. (str (when vs/*current-env*\n                                      (str (:line vs/*current-env*) \": \"))\n                                    \"Cannot apply non-polymorphic type \" (ind/unparse-type rator)))))))", :ns "clojure.core.typed.type-ctors", :name "resolve-app*", :file "clojure/core/typed/type_ctors.clj", :column 1, :line 1320, :arglists ([rator rands])}