{:type :fn, :src "(defn keyword->Fn [kw]\n  {:pre [(keyword? kw)]\n   :post [(r/Type? %)]}\n  (Poly* ['x]\n         [r/no-bounds]\n         (r/make-FnIntersection\n           (r/make-Function\n             [(-partial-hmap {(r/-val kw) (r/make-F 'x)})]\n             (r/make-F 'x)\n             nil nil\n             :object (or/-path [(path/-kpe kw)] 0))\n           (r/make-Function\n             [(Un (make-HMap\n                    :optional {(r/-val kw) (r/make-F 'x)})\n                  r/-nil)]\n             (Un r/-nil (r/make-F 'x))\n             nil nil\n             :object (or/-path [(path/-kpe kw)] 0))\n           (r/make-Function\n             [r/-any]\n             r/-any\n             nil nil\n             :object (or/-path [(path/-kpe kw)] 0)))))", :ns "clojure.core.typed.type-ctors", :name "keyword->Fn", :file "clojure/core/typed/type_ctors.clj", :column 1, :line 2069, :arglists ([kw])}