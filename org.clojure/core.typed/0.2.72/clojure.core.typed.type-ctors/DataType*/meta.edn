{:type :fn, :src "(defn DataType* [names variances poly? name bnds fields record?]\n  {:pre [(every? symbol? names)\n         (every? r/variance? variances)\n         (= (count variances) (count poly?))\n         (every? r/Type? poly?)\n         (every? r/Bounds? bnds)\n         (symbol? name)]\n   :post [(r/Type? %)]}\n  (let [p (r/DataType-maker name (seq variances) (seq poly?) fields record?)]\n    (if (seq variances)\n      (TypeFn* names variances bnds p)\n      p)))", :ns "clojure.core.typed.type-ctors", :name "DataType*", :file "clojure/core/typed/type_ctors.clj", :column 1, :line 591, :arglists ([names variances poly? name bnds fields record?])}