{:type :fn, :src "(defn RClass-of-with-unknown-params\n  ([sym-or-cls & {:keys [warn-msg]}]\n   {:pre [((some-fn class? symbol?) sym-or-cls)]\n    :post [((some-fn r/RClass? r/DataType?) %)]}\n   (let [sym (if (class? sym-or-cls)\n               (coerce/Class->symbol sym-or-cls)\n               sym-or-cls)\n         rc ((some-fn dtenv/get-datatype rcls/get-rclass) sym)\n         args (when (r/TypeFn? rc)\n                (when warn-msg\n                  (println \"WARNING: \" warn-msg \": \" sym))\n                (let [syms (TypeFn-fresh-symbols* rc)]\n                  (most-general-on-variance (:variances rc)\n                                            (TypeFn-bbnds* syms rc))))]\n     (RClass-of sym args))))", :ns "clojure.core.typed.type-ctors", :name "RClass-of-with-unknown-params", :file "clojure/core/typed/type_ctors.clj", :column 1, :line 820, :arglists ([sym-or-cls & {:keys [warn-msg]}])}