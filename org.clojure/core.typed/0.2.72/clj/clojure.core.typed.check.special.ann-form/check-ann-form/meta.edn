{:type :fn, :src "(defn check-ann-form\n  [check {:keys [statements env] frm :ret :as expr} expected]\n  {:pre [(#{3} (count statements))]}\n  (let [[_ _ texpr] statements\n        tsyn (ast-u/map-expr-at texpr :type)\n        parsed-ty (binding [vs/*current-env* env\n                            prs/*parse-type-in-ns* (cu/expr-ns expr)]\n                    (prs/parse-type tsyn))\n        cty (check frm (r/ret parsed-ty))\n        checked-type (r/ret-t (u/expr-type cty))\n        _ (binding [vs/*current-expr* frm]\n            (when (not (sub/subtype? checked-type parsed-ty))\n              (cu/expected-error checked-type parsed-ty)))\n        _ (when (and expected (not (sub/subtype? checked-type (r/ret-t expected))))\n            (binding [vs/*current-expr* frm\n                      vs/*current-env* env]\n              (cu/expected-error checked-type (r/ret-t expected))))]\n    (assoc expr\n           :ret cty\n           u/expr-type (r/ret parsed-ty))))", :ns "clojure.core.typed.check.special.ann-form", :name "check-ann-form", :file "clojure/core/typed/check/special/ann_form.clj", :column 1, :line 10, :arglists ([check {:keys [statements env], frm :ret, :as expr} expected])}