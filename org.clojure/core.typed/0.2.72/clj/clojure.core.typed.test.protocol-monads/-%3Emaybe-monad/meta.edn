{:type :fn, :src "(deftype maybe-monad [v]\n  clojure.lang.IDeref\n  (deref [_]\n    v)\n\n  Monad\n  (do-result [_ v]\n    (maybe-monad. v))\n  (bind [mv f]\n    (if (= mv maybe-zero-val)\n      maybe-zero-val\n      (f @mv)))\n\n  MonadZero\n  (zero [_]\n    maybe-zero-val)\n  (plus-step [mv mvs]\n    (let [mv (->> (cons mv mvs)\n                  (drop-while #(= maybe-zero-val %))\n                  first)]\n      (if (nil? mv)\n        maybe-zero-val\n        mv))))", :ns "clojure.core.typed.test.protocol-monads", :name "->maybe-monad", :file "clojure/core/typed/test/protocol_monads.clj", :column 1, :line 231, :arglists ([v]), :doc "Positional factory function for class clojure.core.typed.test.protocol_monads.maybe-monad."}