{:ns "clojure.core.typed.test.protocol-monads", :name "update-val", :file "clojure/core/typed/test/protocol_monads.clj", :type :fn, :src "(defn update-val\n  \"Return a state-monad value that assumes the state to be a map and\n   replaces the value associated with the given key by the return value\n   of f applied to the old value and args. The old value is returned.\"\n  [key f & args]\n  (bind (update-state #(apply update-in % [key] f args))\n        #(state (get % key))))", :column 1, :line 319, :arglists ([key f & args]), :doc "Return a state-monad value that assumes the state to be a map and\n   replaces the value associated with the given key by the return value\n   of f applied to the old value and args. The old value is returned."}