{:type :fn, :src "(deftype writer-monad [v accumulator]\n  clojure.lang.IDeref\n  (deref [_]\n    [v accumulator])\n\n  Monad\n  (do-result [_ v]\n    (writer-monad. v (writer-m-empty accumulator)))\n  (bind [mv f]\n    (let [[v1 a1] (deref mv)\n          [v2 a2] (deref (f v1))]\n      (writer-monad. v2 (writer-m-combine a1 a2)))))", :ns "clojure.core.typed.test.protocol-monads", :name "->writer-monad", :file "clojure/core/typed/test/protocol_monads.clj", :column 1, :line 386, :arglists ([v accumulator]), :doc "Positional factory function for class clojure.core.typed.test.protocol_monads.writer-monad."}