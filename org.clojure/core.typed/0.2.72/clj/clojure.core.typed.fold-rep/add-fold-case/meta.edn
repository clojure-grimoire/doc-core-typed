{:type :macro, :src "(defmacro add-fold-case [mode ty fld-fn]\n  `(defmethod fold-rhs [~mode ~ty]\n     ~(symbol (str \"fold-rhs \" (name mode) ty))\n     [mode# options# ty#]\n     (u/p ~(keyword (str \"fold-\" mode) (str ty))\n     (let [~'[type-rec filter-rec object-rec pathelem-rec]\n           (map #(or (% options#)\n                     (partial fold-rhs mode# options#))\n                [:type-rec :filter-rec :object-rec :pathelem-rec])]\n       (~fld-fn ty# options#)))))", :macro true, :ns "clojure.core.typed.fold-rep", :name "add-fold-case", :file "clojure/core/typed/fold_rep.clj", :column 1, :line 23, :arglists ([mode ty fld-fn])}