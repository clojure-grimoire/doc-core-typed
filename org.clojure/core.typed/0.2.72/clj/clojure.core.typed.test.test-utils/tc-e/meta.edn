{:ns "clojure.core.typed.test.test-utils", :name "tc-e", :file "clojure/core/typed/test/test_utils.clj", :type :macro, :src "(defmacro tc-e \n  \"Type check an an expression in namespace that :refer's\n  all of clojure.core.typed (aliased to t) and aliases clojure.core\n  to core.\n\n  Takes one form and then options, and returns true if the form checks\n  with the expected input/output types according to the provided options.\n  \n  The first form in the options can be a static type syntax scoped\n  in the new namespace. This is disambiguated with a call to keyword?\n  (literal keywords aren't valid type syntax).\n  \n  eg. (tc-e (+ 1 1) Num)\n      ;=> Num\n\n  Keyword Options:\n\n    :expected-ret An expected ret, evaluated in the current namespace (not the new\n                  one that refers c.c.t). Cannot be provided in combination with the implicit\n                  first option as a type, as above.\n    :ret          Check the return TCResult of this expression against this ret. Evaluated\n                  in the current namespace.\"\n  [frm & opts]\n  (apply common-test/tc-e tc-common* frm opts))", :column 1, :line 51, :macro true, :arglists ([frm & opts]), :doc "Type check an an expression in namespace that :refer's\n  all of clojure.core.typed (aliased to t) and aliases clojure.core\n  to core.\n\n  Takes one form and then options, and returns true if the form checks\n  with the expected input/output types according to the provided options.\n  \n  The first form in the options can be a static type syntax scoped\n  in the new namespace. This is disambiguated with a call to keyword?\n  (literal keywords aren't valid type syntax).\n  \n  eg. (tc-e (+ 1 1) Num)\n      ;=> Num\n\n  Keyword Options:\n\n    :expected-ret An expected ret, evaluated in the current namespace (not the new\n                  one that refers c.c.t). Cannot be provided in combination with the implicit\n                  first option as a type, as above.\n    :ret          Check the return TCResult of this expression against this ret. Evaluated\n                  in the current namespace."}