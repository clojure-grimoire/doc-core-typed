{:ns "clojure.core.typed.test.test-utils", :name "tc-common*", :file "clojure/core/typed/test/test_utils.clj", :type :fn, :src "(defn tc-common* [frm {{:keys [syn provided?]} :expected-syntax :keys [expected-ret requires] :as opt}]\n  (check-opt opt)\n  (let [ns-form \n        `(ns ~(gensym 'clojure.core.typed.test.temp)\n           (:refer-clojure :exclude \n                           ~'[type defprotocol #_letfn fn loop dotimes let for doseq\n                              #_def filter remove defn atom ref])\n           (:require ~@'[[clojure.core.typed :refer :all :as t]\n                         [clojure.core.typed.unsafe :as unsafe]\n                         [clojure.core :as core]]\n                     ~@requires))]\n    `(let [expected-ret# ~expected-ret]\n       (binding [*ns* *ns*\n                 *file* *file*]\n         ; checking (do ~ns-form ~frm) doesn't seem to work too well.\n         ; Don't check the ns form if we don't have extra requires, it's\n         ; much faster.\n         ~(if requires\n            `(t/check-form-info\n               '~ns-form)\n            ns-form)\n         (t/check-form-info \n           '~frm\n           :expected-ret expected-ret#\n           :expected '~syn\n           :type-provided? ~provided?)))))", :column 1, :line 24, :arglists ([frm {{:keys [syn provided?]} :expected-syntax, :keys [expected-ret requires], :as opt}])}