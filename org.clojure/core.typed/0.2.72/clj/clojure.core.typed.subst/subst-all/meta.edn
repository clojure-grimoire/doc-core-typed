{:type :fn, :src "(defn subst-all [s t]\n  {:pre [(crep/substitution-c? s)\n         (r/AnyType? t)]\n   :post [(r/AnyType? %)]}\n  (u/p :subst/subst-all\n  (reduce (fn [t [v r]]\n            (cond\n              (crep/t-subst? r) (substitute (:type r) v t)\n              (crep/i-subst? r) (substitute-dots (:types r) nil v t)\n              (crep/i-subst-starred? r) (substitute-dots (:types r) (:starred r) v t)\n              (and (crep/i-subst-dotted? r)\n                   (empty? (:types r))) (substitute-dotted (:dty r) (:name (:dbound r)) v t)\n              (crep/i-subst-dotted? r) (err/nyi-error \"i-subst-dotted nyi\")\n              :else (err/nyi-error (str \"Other substitutions NYI\"))))\n          t s)))", :ns "clojure.core.typed.subst", :name "subst-all", :file "clojure/core/typed/subst.clj", :column 1, :line 52, :arglists ([s t])}