{:ns "clojure.core.typed.test.CTYP146", :name "distinct-except", :file "clojure/core/typed/test/CTYP146.clj", :type :fn, :src "(defn distinct-except\n  \"Same as distinct, but keeps duplicates if they pass exception?\"\n  [exception? [head & tail :as coll]]\n  (lazy-seq\n    (when head\n      (cons head\n            (distinct-except exception?\n                             (if (exception? head)\n                               (when tail (cast clojure.lang.Sequential tail))\n                               (cast clojure.lang.Sequential (remove (partial = head) tail))))))))", :column 1, :line 7, :arglists ([exception? [head & tail :as coll]]), :doc "Same as distinct, but keeps duplicates if they pass exception?"}