{:type :fn, :src "(defn assoc-pairs-noret [t & pairs]\n  {:pre [(r/Type? t)\n         (every? (fn [[k v :as kv]]\n                   (and (= 2 (count kv))\n                        (r/Type? k)\n                        (r/Type? v)))\n                 pairs)]\n   :post [((some-fn nil? r/Type?) %)]}\n  (apply assoc-type-pairs t (map (fn [[k v]] [(r/ret k) (r/ret v)]) pairs)))", :ns "clojure.core.typed.assoc-utils", :name "assoc-pairs-noret", :file "clojure/core/typed/assoc_utils.clj", :column 1, :line 130, :arglists ([t & pairs])}