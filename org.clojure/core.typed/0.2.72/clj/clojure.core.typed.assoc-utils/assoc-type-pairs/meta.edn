{:type :fn, :src "(defn assoc-type-pairs [t & pairs]\n  {:pre [(r/Type? t)\n         (every? (fn [[k v :as kv]]\n                   (and (= 2 (count kv))\n                        (r/TCResult? k)\n                        (r/TCResult? v)))\n                 pairs)]\n   :post [((some-fn nil? r/Type?) %)]}\n  (c/reduce-type-transform -assoc-pair t pairs\n                         :when #(satisfies? AssocableType %)))", :ns "clojure.core.typed.assoc-utils", :name "assoc-type-pairs", :file "clojure/core/typed/assoc_utils.clj", :column 1, :line 119, :arglists ([t & pairs])}