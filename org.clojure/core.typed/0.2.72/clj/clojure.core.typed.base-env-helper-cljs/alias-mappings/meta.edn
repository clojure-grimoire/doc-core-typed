{:type :macro, :src "(defmacro alias-mappings [& args]\n  `(impl/with-cljs-impl\n     (let [ts# (partition 2 '~args)]\n       (into {}\n             (doall\n               (for [[s# t#] ts#]\n                 (let [;desc# (-> s# meta :doc)\n                       ;doc# (str (when desc#\n                       ;            (str desc# \"\\n\\n\")) \n                       ;          (with-out-str (pprint/pprint t#)))\n                       ;_# (assert (and (symbol? s#)\n                       ;                (namespace s#))\n                       ;           \"Need fully qualified symbol\")\n                       ;v# (intern (find-ns (symbol (namespace s#))) (symbol (name s#)))\n                       ;_# (alter-meta! v# merge {:doc doc#})\n                       ]\n                   [(with-meta s# nil) (prs/parse-type t#)])))))))", :macro true, :ns "clojure.core.typed.base-env-helper-cljs", :name "alias-mappings", :file "clojure/core/typed/base_env_helper_cljs.clj", :column 1, :line 19, :arglists ([& args])}