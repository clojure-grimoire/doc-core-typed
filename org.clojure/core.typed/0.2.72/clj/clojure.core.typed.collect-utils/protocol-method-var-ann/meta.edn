{:type :fn, :src "(defn protocol-method-var-ann [mt names bnds]\n  (cond\n    (r/Poly? mt) (let [outer-names names\n                       inner-names (concat (c/Poly-fresh-symbols* mt))]\n                   (c/Poly* (concat outer-names inner-names)\n                            (concat bnds (c/Poly-bbnds* inner-names mt))\n                            (c/Poly-body* inner-names mt)))\n\n    (r/PolyDots? mt) (let [outer-names names\n                           inner-names (concat (c/PolyDots-fresh-symbols* mt))]\n                       (c/PolyDots* (concat outer-names inner-names)\n                                    (concat bnds (c/PolyDots-bbnds* inner-names mt))\n                                    (c/PolyDots-body* inner-names mt)))\n    :else (let [outer-names names]\n            (c/Poly* outer-names\n                     bnds\n                     mt))))", :ns "clojure.core.typed.collect-utils", :name "protocol-method-var-ann", :file "clojure/core/typed/collect_utils.clj", :column 1, :line 18, :arglists ([mt names bnds])}