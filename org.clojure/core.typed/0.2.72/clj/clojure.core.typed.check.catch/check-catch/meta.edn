{:type :fn, :src "(defn check-catch [check {handler :body :keys [local] :as expr} expected]\n  (let [ecls (ast-u/catch-op-class expr)\n        local-sym (:name local)\n        local-type (impl/impl-case\n                     :clojure (c/RClass-of-with-unknown-params ecls)\n                     :cljs (err/nyi-error \"catch in CLJS\"))\n        chandler (lex/with-locals {local-sym local-type}\n                   (check handler expected))]\n    (assoc expr\n           u/expr-type (u/expr-type chandler))))", :ns "clojure.core.typed.check.catch", :name "check-catch", :file "clojure/core/typed/check/catch.clj", :column 1, :line 9, :arglists ([check {handler :body, :keys [local], :as expr} expected])}