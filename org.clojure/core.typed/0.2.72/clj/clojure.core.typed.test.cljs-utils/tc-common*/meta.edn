{:ns "clojure.core.typed.test.cljs-utils", :name "tc-common*", :file "clojure/core/typed/test/cljs_utils.clj", :type :fn, :src "(defn tc-common* [frm {{:keys [syn provided?]} :expected-syntax :keys [expected-ret] :as opt}]\n  (let [nsym (gensym 'clojure.core.typed.test.temp)]\n    (check-opt opt)\n    `(binding [ana/*cljs-ns* ana/*cljs-ns*]\n       (ucljs/with-cljs-typed-env\n         (let [expected-ret# ~expected-ret\n               ; first element of this list must be the symbol ns\n               ns-form# '(~'ns ~nsym\n                           ;~'(:refer-clojure :exclude [fn])\n                           ~'(:require [cljs.core.typed :as t :include-macros true]\n                                       [cljs.core :as core]))\n               _# (ana/analyze (ana/empty-env) ns-form#)]\n           (t/check-form-info \n             '~frm\n             :expected-ret expected-ret#\n             :expected '~syn\n             :type-provided? ~provided?))))))", :column 1, :line 40, :arglists ([frm {{:keys [syn provided?]} :expected-syntax, :keys [expected-ret], :as opt}])}