{:ns "clojure.core.typed.test.pomegranate", :name "call-method", :file "clojure/core/typed/test/pomegranate.clj", :type :fn, :src "(defn call-method\n  \"Calls a private or protected method.\n\n  params is a vector of classes which correspond to the arguments to\n  the method e\n\n  obj is nil for static methods, the instance object otherwise.\n\n  The method-name is given a symbol or a keyword (something Named).\"\n  [^Class klass method-name params obj & args]\n  (let [method (doto (.getDeclaredMethod klass \n                                         (name method-name)\n                                         (t/into-array> Class params))\n                 (.setAccessible true))]\n    (.invoke method obj (t/into-array> (t/U nil Object) args))))", :column 1, :line 11, :arglists ([klass method-name params obj & args]), :doc "Calls a private or protected method.\n\n  params is a vector of classes which correspond to the arguments to\n  the method e\n\n  obj is nil for static methods, the instance object otherwise.\n\n  The method-name is given a symbol or a keyword (something Named)."}