{:type :fn, :src "(defn index-free-in? [k type]\n  (let [free-in? (atom false :validator con/boolean?)]\n    (letfn [(for-object [o]\n              (fold/fold-rhs ::free-in-for-object\n                             {:type-rec for-type\n                              :locals {:free-in? free-in?\n                                       :k k}}\n                             o))\n            (for-filter [o]\n              (fold/fold-rhs ::free-in-for-filter\n                             {:type-rec for-type\n                              :filter-rec for-filter\n                              :locals {:free-in? free-in?\n                                       :k k}}\n                             o))\n            (for-type [t]\n              (fold/fold-rhs ::free-in-for-type\n                             {:type-rec for-type\n                              :filter-rec for-filter\n                              :object-rec for-object\n                              :locals {:free-in? free-in?\n                                       :k k\n                                       :for-type for-type}}\n                             t))]\n      (for-type type)\n      @free-in?)))", :ns "clojure.core.typed.free-in", :name "index-free-in?", :file "clojure/core/typed/free_in.clj", :column 1, :line 57, :arglists ([k type])}