{:type :fn, :src "(defn check-special-loop\n  [check {[_ _ {{tsyns :ann} :val} :as statements] :statements frm :ret, :keys [env], :as expr} expected]\n  {:pre [(#{3} (count statements))]}\n  (let [tbindings (binding [prs/*parse-type-in-ns* (cu/expr-ns expr)]\n                    (mapv (comp prs/parse-type :type) (:params tsyns)))\n        cfrm ;loop may be nested, type the first loop found\n        (binding [recur-u/*loop-bnd-anns* tbindings]\n          (check frm expected))]\n    (assoc expr\n           :ret cfrm\n           u/expr-type (u/expr-type cfrm))))", :ns "clojure.core.typed.check.special.loop", :name "check-special-loop", :file "clojure/core/typed/check/special/loop.clj", :column 1, :line 7, :arglists ([check {[_ _ {{tsyns :ann} :val} :as statements] :statements, frm :ret, :keys [env], :as expr} expected])}