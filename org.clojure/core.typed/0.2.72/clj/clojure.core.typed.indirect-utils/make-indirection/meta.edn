{:type :macro, :src "(defmacro make-indirection [& vs]\n  `(do \n     ~@(map (fn [v]\n              (let [atm (symbol (str v \"-atom\"))]\n                (when-not (resolve v)\n                  [`(def ~atm (atom nil))\n                   `(def ~v (fn [& args#]\n                              (let [i# (deref ~atm)]\n                                (when-not i#\n                                  (throw (ex-info (str \"Indirection for \" \n                                                       '~(symbol (str (ns-name *ns*)) (str v))\n                                                       \" not set\")\n                                                  {})))\n                                (apply i# args#))))])))\n            vs)))", :macro true, :ns "clojure.core.typed.indirect-utils", :name "make-indirection", :file "clojure/core/typed/indirect_utils.clj", :column 1, :line 4, :arglists ([& vs])}