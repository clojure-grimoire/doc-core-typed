{:type :var, :src "(delay-and-cache-env ^:private init-protocol-env \n                     {}\n   #_(protocol-mappings\nclojure.java.io/IOFactory \n     [[]\n      :methods\n      {\n       make-reader\n       [clojure.java.io/IOFactory '{:append Any, :encoding (U nil String)} -> java.io.BufferedReader]\n\n       make-writer \n       [clojure.java.io/IOFactory '{:append Any, :encoding (U nil String)} -> java.io.BufferedWriter]\n\n       make-input-stream \n       [clojure.java.io/IOFactory '{:append Any, :encoding (U nil String)} -> java.io.BufferedInputStream]\n\n       make-output-stream\n       [clojure.java.io/IOFactory '{:append Any, :encoding (U nil String)} -> java.io.BufferedOutputStream]\n       }]\n\n     ))", :ns "clojure.core.typed.base-env", :name "thread-bindings-init-protocol-env", :file "clojure/core/typed/base_env.clj", :column 1, :line 61}