{:type :var, :src "(delay-and-cache-env ^:private init-protocol-env \n  (h/protocol-mappings\n    \ncljs.core/Fn [[]]\ncljs.core/IFn [[]]\ncljs.core/ICloneable [[]]\ncljs.core/ICounted [[]]\ncljs.core/IEmptyableCollection [[]]\ncljs.core/ICollection [[[x :variance :covariant]]]\ncljs.core/IIndexed [[]]\ncljs.core/ASeq [[[x :variance :covariant]]]\ncljs.core/ISeqable [[[x :variance :covariant]]]\ncljs.core/ISeq [[[x :variance :covariant]]]\ncljs.core/INext [[[x :variance :covariant]]]\ncljs.core/ILookup [[[maxk :variance :covariant]\n                    [v :variance :covariant]]]\ncljs.core/IAssociative [[[k :variance :covariant]\n                         [v :variance :covariant]]]\ncljs.core/IMap [[[k :variance :covariant]\n                 [v :variance :covariant]]]\ncljs.core/IMapEntry [[[k :variance :covariant]\n                      [v :variance :covariant]]]\ncljs.core/ISet [[[x :variance :covariant]]]\ncljs.core/IStack [[[x :variance :covariant]]]\ncljs.core/IVector [[[x :variance :covariant]]]\ncljs.core/IDeref [[[x :variance :covariant]]]\ncljs.core/IDerefWithTimeout [[[x :variance :covariant]]]\ncljs.core/IMeta [[]]\ncljs.core/IWithMeta [[]]\n    ;TODO\n;cljs.core/IReduce [[]]\n;cljs.core/IKVReduce [[]]\ncljs.core/IList [[[x :variance :covariant]]]\ncljs.core/IEquiv [[]]\ncljs.core/IHash [[]]\ncljs.core/ISequential [[]]\ncljs.core/Record [[]]\ncljs.core/IReversible [[[x :variance :covariant]]]\ncljs.core/ISorted [[]]\ncljs.core/IWriter [[]]\ncljs.core/IPrintWithWriter [[]]\ncljs.core/IPending [[]]\n    ;TODO\n;cljs.core/IWatchable [[]]\n    ;cljs.core/IEditableCollection [[]]\n    ;cljs.core/ITransientCollection [[]]\n    ;cljs.core/ITransientAssociative [[]]\n    ;cljs.core/ITransientMap [[]]\n    ;cljs.core/ITransientVector [[]]\n    ;cljs.core/ITransientSet [[]]\ncljs.core/IComparable [[]]\n    ;cljs.core/IChunk [[]]\n    ;cljs.core/IChunkedSeq [[]]\n    ;cljs.core/IChunkedNext [[]]\ncljs.core/INamed [[]]\ncljs.core/Reduced [[[x :variance :covariant]]]\n))", :ns "clojure.core.typed.base-env-cljs", :name "thread-bindings-init-protocol-env", :file "clojure/core/typed/base_env_cljs.clj", :column 1, :line 15}