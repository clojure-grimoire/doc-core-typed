{:type :fn, :src "(defn Constructor->Function [{:keys [declaring-class parameter-types] :as ctor}]\n  {:pre [(instance? clojure.reflect.Constructor ctor)]\n   :post [(r/FnIntersection? %)]}\n  (let [cls (resolve declaring-class)\n        _ (when-not (class? cls)\n            (err/tc-delayed-error (str \"Constructor for unresolvable class \" (:class ctor))))]\n    (r/make-FnIntersection (r/make-Function (doall (map #(Java-symbol->Type % false) parameter-types))\n                                            (c/RClass-of-with-unknown-params cls)\n                                            nil nil \n                                            ;always a true value. Cannot construct nil\n                                            ; or primitive false\n                                            :filter (fo/-true-filter)))))", :ns "clojure.core.typed.check.utils", :name "Constructor->Function", :file "clojure/core/typed/check/utils.clj", :column 1, :line 381, :arglists ([{:keys [declaring-class parameter-types], :as ctor}])}