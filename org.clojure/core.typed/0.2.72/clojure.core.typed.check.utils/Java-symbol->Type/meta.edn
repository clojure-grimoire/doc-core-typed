{:type :fn, :src "(defn Java-symbol->Type [sym nilable?]\n  {:pre [(symbol? sym)\n         (con/boolean? nilable?)]\n   :post [(r/Type? %)]}\n  (if-let [typ (or ((prs/clj-primitives-fn) sym)\n                   (symbol->PArray sym nilable?)\n                   (when-let [cls (resolve sym)]\n                     (apply c/Un (c/RClass-of-with-unknown-params cls)\n                            (when nilable?\n                              [r/-nil]))))]\n    typ\n    (err/tc-delayed-error (str \"Method symbol \" sym \" does not resolve to a type\"))))", :ns "clojure.core.typed.check.utils", :name "Java-symbol->Type", :file "clojure/core/typed/check/utils.clj", :column 1, :line 147, :arglists ([sym nilable?])}