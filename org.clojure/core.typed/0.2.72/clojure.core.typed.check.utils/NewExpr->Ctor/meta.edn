{:type :fn, :src "(defn NewExpr->Ctor [{c :class :keys [op args] :as expr}]\n  {:pre [(#{:new} op)]\n   :post [(or (instance? clojure.reflect.Constructor %)\n              (nil? %))]}\n  (let [cs (->> (reflect-u/reflect c)\n                :members\n                (filter #(instance? clojure.reflect.Constructor %))\n                (filter #(#{(map (comp reflect-u/reflect-friendly-sym :tag) args)} (:parameter-types %))))]\n    ;(prn \"NewExpr->Ctor\" cs)\n    (first cs)))", :ns "clojure.core.typed.check.utils", :name "NewExpr->Ctor", :file "clojure/core/typed/check/utils.clj", :column 1, :line 302, :arglists ([{c :class, :keys [op args], :as expr}])}