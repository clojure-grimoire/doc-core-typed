{:type :fn, :src "(deftest Get-test\n  ;resolve\n  (is-clj (= (fully-resolve-type (parse-clj `(Get '{:a Number} ':a)))\n             (fully-resolve-type (parse-clj `Number))))\n  (is-clj (both-subtype? (parse-clj `Number)\n                         (parse-clj `(Get '{:a Number} ':a))))\n  (is-tc-e 1 (Get '{:a Number} ':a))\n;  (is-tc-e (fn [a] (inc a)) \n;           [(Get '{:a [Number -> Number]} ':a) -> Number])\n  (is-tc-e (fn [a] (deref a))\n           [(Get '{:a (clojure.core.typed/Atom1 Number)} ':a)\n            -> Number])\n  )", :ns "clojure.core.typed.test.core", :name "Get-test", :file "clojure/core/typed/test/core.clj", :column 1, :line 2857, :test #<core$fn__31293 clojure.core.typed.test.core$fn__31293@2344b01>}