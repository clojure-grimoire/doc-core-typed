{:type :fn, :src "(deftest subtype-hmap-optional-test\n  (is (sub?-q\n        `(HMap :mandatory {:a Number})\n        `(U (HMap :mandatory {:a Number})\n            (HMap :absent-keys [:a]))))\n  (is (sub?-q\n        `(HMap :mandatory {:a Number})\n        `(HMap :optional {:a Number})))\n  (is (not\n        (sub?-q\n          `(HMap :complete? true :mandatory {:a Number :b Any})\n          `(HMap :complete? true :mandatory {:a Number}))))\n  (is (sub?-q\n        `(HMap :complete? true :optional {:a Number :b Any})\n        `(HMap :complete? true :optional {:a Number})))\n  (is (not\n        (sub?-q\n          `(HMap :optional {:a Number})\n          `(HMap :mandatory {:a Number}))))\n  (is (not\n        (sub?-q\n          `(HMap :optional {:b Number})\n          `(HMap :optional {:a Number}))))\n  (is (not\n        (sub?-q\n          `(HMap :optional {:a Any})\n          `(HMap :optional {:a Number}))))\n  (is (not\n        (sub?-q\n          `(HMap :mandatory {:a Number})\n          `(ExactCount 1))))\n  (is (sub?-q\n        `(HMap :complete? true :mandatory {:a Number})\n        `(ExactCount 1)))\n  (is (not\n        (sub?-q\n          `(HMap :complete? true \n                 :mandatory {:foo Any}\n                 :optional {:a Number})\n          `(ExactCount 1))))\n  (is (sub?-q\n        `(HMap :complete? true\n               :mandatory {:foo Number})\n        `(Map Any Num)))\n  (is (not\n        (sub?-q\n          `(HMap :complete? true\n                 :mandatory {:foo Number}\n                 :optional {:bar Any})\n          `(Map Any Num))))\n\n  (is (sub?-q \n        `(U (HMap :mandatory {:foo Number}\n                 :complete? true)\n           (HMap :complete? true))\n        `(HMap :optional {:foo Number})))\n  (is (sub?-q\n        `(U (HMap :mandatory {:c Number}\n                  :optional {:b Number :a Number}\n                  :complete? true)\n            (HMap :optional {:b Number :c Number}\n                  :complete? true))\n        `(HMap :optional {:a Number :b Number :c Number})))\n  (is (sub?-q\n        `(U (HMap :mandatory {:c (Value 5)} \n                  :complete? true) \n            (HMap :complete? true))\n        `(HMap :optional {:c (Value 5)} :complete? true)))\n  (is (sub?-q\n        `(U (HMap :mandatory {:c (Value 5)} \n                 :optional {:b Str :a Num} \n                 :complete? true) \n           (HMap :mandatory {} \n                 :optional {:b Str :a Num} \n                 :complete? true))\n        `(HMap :optional {:a Num :b Str :c (Value 5)} \n               :complete? true)))\n  (is (sub?-q\n        `(HMap :optional {:b Str :a Num})\n        `(HMap :optional {:a Num})))\n  (is (not\n        (sub?-q\n          `(HMap :optional {:a Number})\n          `(HMap :optional {:b String :a Number}))))\n  )", :ns "clojure.core.typed.test.core", :name "subtype-hmap-optional-test", :file "clojure/core/typed/test/core.clj", :column 1, :line 2670, :test #<core$fn__30918 clojure.core.typed.test.core$fn__30918@73c729a8>}