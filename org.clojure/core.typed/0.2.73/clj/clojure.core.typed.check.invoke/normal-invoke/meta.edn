{:type :fn, :src "(defn normal-invoke [check-fn expr fexpr args expected & {:keys [cfexpr cargs]}]\n  (u/p :check/normal-invoke\n  (let [cfexpr (or cfexpr\n                   (check-fn fexpr))\n        cargs (or cargs\n                  (mapv check-fn args))\n        ftype (u/expr-type cfexpr)\n        argtys (map u/expr-type cargs)\n        actual (funapp/check-funapp fexpr args ftype argtys expected)]\n    (assoc expr\n           :fn cfexpr\n           :args cargs\n           u/expr-type actual))))", :ns "clojure.core.typed.check.invoke", :name "normal-invoke", :file "clojure/core/typed/check/invoke.clj", :column 1, :line 5, :arglists ([check-fn expr fexpr args expected & {:keys [cfexpr cargs]}])}