{:type :fn, :src "(defn prepare-expecteds [expr fn-anns]\n  (binding [prs/*parse-type-in-ns* (cu/expr-ns expr)]\n    {:doms\n     (->> fn-anns\n          (map :dom)\n          (mapv (fn [dom]\n                  (mapv (fn [{:keys [type default]}]\n                          (prs/parse-type type))\n                        dom))))\n     :rngs (->> fn-anns\n                (map :rng)\n                (mapv (fn [{:keys [type default]}]\n                        (when-not default\n                          (r/make-Result (prs/parse-type type)\n                                         (fo/-FS fl/-no-filter\n                                                 fl/-no-filter)\n                                         or/-no-object\n                                         (r/-flow fl/-no-filter))))))\n     :rests (->> fn-anns\n                 (map :rest)\n                 (mapv (fn [{:keys [type default] :as has-rest}]\n                         (when has-rest\n                           (prs/parse-type type)))))\n     :drests (->> fn-anns\n                  (map :drest)\n                  (mapv (fn [{:keys [pretype bound] :as has-drest}]\n                          (when has-drest\n                            (r/DottedPretype1-maker\n                              (prs/parse-type pretype)\n                              bound)))))}))", :ns "clojure.core.typed.check.special.fn", :name "prepare-expecteds", :file "clojure/core/typed/check/special/fn.clj", :column 1, :line 83, :arglists ([expr fn-anns])}