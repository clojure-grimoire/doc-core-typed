{:type :fn, :src "(defn check-monitor\n  \"monitor-enter and monitor-exit both take any object and return nil\"\n  [check {:keys [target] :as expr} expected]\n  {:pre [((some-fn nil? r/TCResult?) expected)]}\n  (binding [vs/*current-expr* expr]\n    (assoc expr\n           :target (check target (r/ret (c/RClass-of Object)))\n           u/expr-type (below/maybe-check-below (r/ret r/-nil (fo/-false-filter))\n                                                expected))))", :ns "clojure.core.typed.check.monitor", :name "check-monitor", :file "clojure/core/typed/check/monitor.clj", :column 1, :line 11, :arglists ([check {:keys [target], :as expr} expected]), :doc "monitor-enter and monitor-exit both take any object and return nil"}