{:type :fn, :src "(deftest count-set-test\n  (is-tc-e (let [v :- (Vec Int) [1 2 3]\n                 _ (assert (#{1 2 3} (count v)))]\n             (first v))\n           Int)\n  (is-tc-err (let [v :- (Vec Int) [1 2 3]\n                   _ (assert (#{0 1 2 3} (count v)))]\n               (first v))\n             Int)\n  (is-tc-e (let [v :- (Vec Int) [1 2 3]\n                 _ (assert (#{1 2 3} (count v)))]\n             (nth v 0 nil))\n           Int)\n  (is-tc-err (let [v :- (Vec Int) [1 2 3]\n                   _ (assert (#{0 1 2 3} (count v)))]\n               (nth v 0 nil))\n             Int)\n  (is-tc-e (let [v :- (Vec Int) [1 2 3]\n                 _ (assert (#{1 2 3} (count v)))]\n             (nth v 0))\n           Int)\n  ; we let nth fail at runtime here\n  (is-tc-e (let [v :- (Vec Int) [1 2 3]\n                 _ (assert (#{0 1 2 3} (count v)))]\n             (nth v 0))\n           Int))", :ns "clojure.core.typed.test.core", :name "count-set-test", :file "clojure/core/typed/test/core.clj", :column 1, :line 3415, :test #<core$fn__32953 clojure.core.typed.test.core$fn__32953@63a65a8a>}