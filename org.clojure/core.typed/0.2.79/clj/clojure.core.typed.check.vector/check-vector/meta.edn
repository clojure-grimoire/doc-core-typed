{:type :fn, :src "(defn check-vector [check {:keys [items] :as expr} expected]\n  (let [cargs (mapv check items)\n        res-type (r/-hvec (mapv (comp r/ret-t u/expr-type) cargs)\n                          :filters (mapv (comp r/ret-f u/expr-type) cargs)\n                          :objects (mapv (comp r/ret-o u/expr-type) cargs))]\n    (assoc expr\n           :items cargs\n           u/expr-type (below/maybe-check-below\n                         (r/ret res-type (fo/-true-filter))\n                         expected))))", :ns "clojure.core.typed.check.vector", :name "check-vector", :file "clojure/core/typed/check/vector.clj", :column 1, :line 9, :arglists ([check {:keys [items], :as expr} expected])}