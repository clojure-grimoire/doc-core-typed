{:ns "clojure.core.typed", :name "inst-ctor", :file "clojure/core/typed.clj", :type :macro, :src "(defmacro inst-ctor\n  \"Instantiate a call to a constructor with a number of types.\n  First argument must be an immediate call to a constructor.\n  Returns exactly the instantiatee (the first argument).\n  \n  eg. (inst-ctor (PolyCtor. a b c)\n                 t1 t2 ...)\"\n  [inst-of & types]\n  `(inst-poly-ctor ~inst-of '~types))", :column 1, :line 120, :macro true, :arglists ([inst-of & types]), :doc "Instantiate a call to a constructor with a number of types.\n  First argument must be an immediate call to a constructor.\n  Returns exactly the instantiatee (the first argument).\n  \n  eg. (inst-ctor (PolyCtor. a b c)\n                 t1 t2 ...)"}