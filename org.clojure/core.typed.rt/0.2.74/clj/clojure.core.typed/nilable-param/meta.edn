{:ns "clojure.core.typed", :name "nilable-param", :file "clojure/core/typed.clj", :type :macro, :src "(defmacro nilable-param \n  \"Override which parameters in qualified method msym may accept\n  nilable values. If the parameter is a parameterised type or\n  an Array, this also declares the parameterised types and the Array type as nilable.\n\n  mmap is a map mapping arity parameter number to a set of parameter\n  positions (integers). If the map contains the key :all then this overrides\n  other entries. The key can also be :all, which declares all parameters nilable.\"\n  [msym mmap]\n  `(nilable-param* '~msym '~mmap))", :column 1, :line 1672, :macro true, :arglists ([msym mmap]), :doc "Override which parameters in qualified method msym may accept\n  nilable values. If the parameter is a parameterised type or\n  an Array, this also declares the parameterised types and the Array type as nilable.\n\n  mmap is a map mapping arity parameter number to a set of parameter\n  positions (integers). If the map contains the key :all then this overrides\n  other entries. The key can also be :all, which declares all parameters nilable."}