{:ns "cljs.core.typed", :name "def-alias", :file "cljs/core/typed.clj", :type :macro, :src "(defmacro def-alias \n  \"Define a type alias. Takes an optional doc-string as a second\n  argument.\n\n  Updates the corresponding var with documentation.\n  \n  eg. (def-alias MyAlias\n        \\\"Here is my alias\\\"\n        (U nil String))\"\n  ([sym doc-str t]\n   (assert (string? doc-str) \"Doc-string passed to def-alias must be a string\")\n   `(def-alias ~sym ~t))\n  ([sym t]\n   (assert (symbol? sym) (str \"First argument to def-alias must be a symbol: \" sym))\n   `(do (def-alias* '~sym '~t)\n        ~(when-not (namespace sym)\n           `(def ~sym)))))", :column 1, :line 113, :macro true, :arglists ([sym doc-str t] [sym t]), :doc "Define a type alias. Takes an optional doc-string as a second\n  argument.\n\n  Updates the corresponding var with documentation.\n  \n  eg. (def-alias MyAlias\n        \"Here is my alias\"\n        (U nil String))"}