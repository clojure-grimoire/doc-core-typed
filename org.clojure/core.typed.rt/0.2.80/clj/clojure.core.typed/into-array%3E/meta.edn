{:ns "clojure.core.typed", :name "into-array>", :file "clojure/core/typed.clj", :type :macro, :src "(defmacro into-array> \n  \"Make a Java array with Java class javat and Typed Clojure type\n  cljt. Resulting array will be of type javat, but elements of coll must be under\n  cljt. cljt should be a subtype of javat (the same or more specific).\n\n  *Temporary hack*\n  into-array-syn is exactly the syntax to put as the first argument to into-array.\n  Calling resolve on this syntax should give the correct class.\"\n  ([cljt coll]\n   `(into-array>* '~cljt ~coll))\n  ([javat cljt coll]\n   `(into-array>* '~javat '~cljt ~coll))\n  ([into-array-syn javat cljt coll]\n   `(into-array>* '~javat '~cljt ~coll)))", :column 1, :line 1632, :macro true, :arglists ([cljt coll] [javat cljt coll] [into-array-syn javat cljt coll]), :doc "Make a Java array with Java class javat and Typed Clojure type\n  cljt. Resulting array will be of type javat, but elements of coll must be under\n  cljt. cljt should be a subtype of javat (the same or more specific).\n\n  *Temporary hack*\n  into-array-syn is exactly the syntax to put as the first argument to into-array.\n  Calling resolve on this syntax should give the correct class."}