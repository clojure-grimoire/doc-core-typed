{:type :fn, :src "(defn fixed-arity \n  \"Returns the number of parameters for a :fn-method or :method.\n  Note :method AST nodes include the 'this' parameter.\"\n  [m]\n  {:pre [((some-fn fn-method? deftype-method?) m)]\n   :post [(integer? %)]}\n  (impl/impl-case\n    :clojure (let [fixed (:fixed-arity m)]\n               (assert (integer? fixed))\n               ((if (fn-method? m) identity inc) fixed))\n    :cljs (do (assert (fn-method? m))\n              (assert (contains? m :params))\n              (count (:params m)))))", :ns "clojure.core.typed.ast-utils", :name "fixed-arity", :file "clojure/core/typed/ast_utils.clj", :column 1, :line 211, :arglists ([m]), :doc "Returns the number of parameters for a :fn-method or :method.\n  Note :method AST nodes include the 'this' parameter."}