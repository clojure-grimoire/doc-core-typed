{:type :fn, :src "(defn method-type\n  \"Given a method symbol, print the core.typed types assigned to it.\n  Intended for use at the REPL.\"\n  [mname]\n  (load-if-needed)\n  (let [type-reflect (impl/v 'clojure.reflect/type-reflect)\n        unparse-type (impl/v 'clojure.core.typed.parse-unparse/unparse-type)\n        Method->Type (impl/v 'clojure.core.typed.check/Method->Type)\n        ms (->> (type-reflect (Class/forName (namespace mname)))\n             :members\n             (core/filter #(and (instance? clojure.reflect.Method %)\n                           (= (str (:name %)) (name mname))))\n             set)\n        _ (assert (seq ms) (str \"Method \" mname \" not found\"))]\n    (println \"Method name:\" mname)\n    (flush)\n    (core/doseq [m ms]\n      (println (unparse-type\n                 (Method->Type m)))\n      (flush))))", :ns "clojure.core.typed", :name "method-type", :file "clojure/core/typed.clj", :column 1, :line 64, :doc "Given a method symbol, print the core.typed types assigned to it.\n  Intended for use at the REPL."}