{:type :fn, :src "(defn int-error\n  ([estr] (int-error estr {}))\n  ([estr {:keys [use-current-env] :as opt}]\n   (let [{:keys [line column file] :as env} *current-env*]\n     (throw (ex-info (str \"Internal Error \"\n                          \"(\" (or file (:ns env)) \":\" \n                          (or line \"<NO LINE>\")\n                          (when column\n                            (str \":\" column))\n                          \") \"\n                          estr)\n                     {:type-error int-error-kw\n                      :env (or (when (and uvs/*current-expr*\n                                          (not use-current-env))\n                                 (:env uvs/*current-expr*))\n                               (env-for-error *current-env*))})))))", :ns "clojure.core.typed.errors", :name "int-error", :file "clojure/core/typed/errors.clj", :column 1, :line 35, :arglists ([estr] [estr {:keys [use-current-env], :as opt}])}