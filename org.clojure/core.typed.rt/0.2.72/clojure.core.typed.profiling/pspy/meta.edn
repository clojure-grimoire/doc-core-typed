{:ns "clojure.core.typed.profiling", :name "pspy", :file "clojure/core/typed/profiling.clj", :type :macro, :src "(defmacro pspy\n  \"Profile spy. When in the context of a *pdata* binding, records execution time\n  of named body. Always returns the body's result.\"\n  [name & body]\n  (let [name (fq-keyword name)]\n    `(if-not taoensso.timbre.profiling/*pdata*\n       (do ~@body)\n       (let [name#       ~name\n             start-time# (System/nanoTime)\n             result#     (do ~@body)\n             elapsed#    (- (System/nanoTime) start-time#)]\n         (clojure.core.typed/tc-ignore \n           (swap! taoensso.timbre.profiling/*pdata* #(assoc % name# (conj (% name# []) elapsed#))))\n         result#))))", :column 1, :line 154, :macro true, :arglists ([name & body]), :doc "Profile spy. When in the context of a *pdata* binding, records execution time\n  of named body. Always returns the body's result."}