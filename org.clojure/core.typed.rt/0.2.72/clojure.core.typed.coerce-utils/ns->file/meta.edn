{:type :fn, :src "(defn ns->file [nsym]\n  {:pre [(symbol? nsym)]\n   :post [(string? %)]}\n  ;copied basic approach from tools.emitter.jvm\n  (let [res (munge nsym)\n        p    (str (str/replace res #\"\\.\" \"/\") \n                  (impl/impl-case\n                    :clojure \".clj\"\n                    :cljs \".cljs\"))\n        p (if (.startsWith p \"/\") (subs p 1) p)]\n    p))", :ns "clojure.core.typed.coerce-utils", :name "ns->file", :file "clojure/core/typed/coerce_utils.clj", :column 1, :line 48, :arglists ([nsym])}