{:type :fn, :src "(defn map-expr-at [expr key]\n  (impl/impl-case\n    :clojure (let [_ (assert (#{:const} (:op expr)))\n                   v (:val expr)]\n               (assert (contains? v key) key)\n               (get v key))\n    :cljs (let [_ (assert (#{:map} (:op expr)))\n                m (zipmap (map :form (:keys expr))\n                          (:vals expr))\n                _ (assert (contains? m key))\n                vexpr (get m key)]\n            (:form vexpr))))", :ns "clojure.core.typed.ast-utils", :name "map-expr-at", :file "clojure/core/typed/ast_utils.clj", :column 1, :line 30, :arglists ([expr key])}