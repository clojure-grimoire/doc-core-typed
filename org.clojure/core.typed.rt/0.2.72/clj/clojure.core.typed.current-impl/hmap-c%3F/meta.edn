{:type :fn, :src "(defn hmap-c? [& {:keys [mandatory optional absent-keys complete?]}]\n  (every-pred map?\n              #(cond\n                 complete? (set/subset? (set (keys %))\n                                        (set (mapcat keys [mandatory optional])))\n                 :else\n                 (let [actual-ks (set (keys %))]\n                   (and \n                     ;required keys is a subset of actual keys\n                     (set/subset? \n                       (set (keys mandatory))\n                       actual-ks)\n                     ;no absent-keys are present\n                     (empty?\n                       (set/intersection\n                         absent-keys\n                         actual-ks)))))\n              #(every? identity \n                       (for [[k vc] mandatory]\n                         (and (contains? % k)\n                              (vc (get % k)))))\n              #(every? identity \n                       (for [[k vc] optional]\n                         (or (not (contains? % k))\n                             (vc (get % k)))))))", :ns "clojure.core.typed.current-impl", :name "hmap-c?", :file "clojure/core/typed/current_impl.clj", :column 1, :line 163, :arglists ([& {:keys [mandatory optional absent-keys complete?]}])}