{:type :macro, :src "(defmacro import-macros [ns [& vars]]\n  (core/let [ns (find-ns ns)\n             vars (map #(ns-resolve ns %) vars)\n             syms (map (core/fn [^clojure.lang.Var v] (core/-> v .sym (with-meta {:macro true}))) vars)\n             defs (map (core/fn [sym var]\n                         `(do (def ~sym (deref ~var))\n                              ;for AOT compilation\n                              (alter-meta! (var ~sym) \n                                           merge\n                                           (dissoc (meta ~var) :ns :name)\n                                           {:macro true})))\n                       syms vars)]\n    `(do ~@defs\n         :imported)))", :macro true, :ns "clojure.core.typed.import-macros", :name "import-macros", :file "clojure/core/typed/import_macros.clj", :column 1, :line 5, :arglists ([ns [& vars]])}