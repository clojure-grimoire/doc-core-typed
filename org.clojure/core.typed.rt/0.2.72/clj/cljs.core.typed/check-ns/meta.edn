{:ns "cljs.core.typed", :name "check-ns", :file "cljs/core/typed.clj", :type :macro, :src "(defmacro check-ns\n  \"Check a Clojurescript namespace, or the current namespace. This macro\n  is intended to be called at the Clojurescript REPL. For the equivalent function see\n  check-ns*.\n  \n  The symbols *ns* and clojure.core/*ns* are special and refer to the current namespace. Useful if\n  providing options for the current namespace.\"\n  ([] \n   (load-if-needed)\n   `(check-ns *ns*))\n  ([ns-or-syms & args]\n   (load-if-needed)\n   (let [_ (when (and (list? ns-or-syms)\n                      (#{'quote} (first ns-or-syms)))\n             (err/int-error \"check-ns is a macro, do not quote the first argument\"))\n         ns-or-syms (if ('#{*ns* clojure.core/*ns*} ns-or-syms)\n                      (impl/v 'cljs.analyzer/*cljs-ns*)\n                      ns-or-syms)]\n     `~(apply check-ns* ns-or-syms args))))", :column 1, :line 277, :macro true, :arglists ([] [ns-or-syms & args]), :doc "Check a Clojurescript namespace, or the current namespace. This macro\n  is intended to be called at the Clojurescript REPL. For the equivalent function see\n  check-ns*.\n  \n  The symbols *ns* and clojure.core/*ns* are special and refer to the current namespace. Useful if\n  providing options for the current namespace."}