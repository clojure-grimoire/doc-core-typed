{:ns "clojure.core.typed.async", :name "go>", :file "clojure/core/typed/async.clj", :type :macro, :src "(defmacro go>\n  \"DEPRECATED: use go\"\n  [& body]\n  (prn \"DEPRECATED: go>, use go\")\n  `(let [c# (chan> ~'Any 1)\n         captured-bindings# (clojure.lang.Var/getThreadBindingFrame)]\n     (tc-ignore\n       (clojure.core.async.impl.dispatch/run\n         (fn []\n           (let [f# ~(ioc/state-machine body 1 &env ioc/async-custom-terminators)\n                 state# (-> (f#)\n                            (ioc/aset-all! \n                              ioc/USER-START-IDX c#\n                              ioc/BINDINGS-IDX captured-bindings#))]\n             (ioc/run-state-machine state#)))))\n     c#))", :column 1, :line 452, :macro true, :arglists ([& body]), :doc "DEPRECATED: use go"}