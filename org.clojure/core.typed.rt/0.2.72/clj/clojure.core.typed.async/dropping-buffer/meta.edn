{:ns "clojure.core.typed.async", :name "dropping-buffer", :file "clojure/core/typed/async.clj", :type :macro, :src "(defmacro dropping-buffer\n  \"Like dropping-buffer but with optional type annotations.\n\n  (dropping-buffer :- t ...) creates a dropping buffer that can read and write type t.\n  Subsequent arguments are passed directly to clojure.core.async/dropping-buffer.\n\n  Note: (dropping-buffer :- t ...) is the same as ((inst dropping-buffer t) ...)\"\n  [& args]\n  (let [[t? t args] (maybe-annotation args)]\n    (if t?\n      `((inst async/dropping-buffer ~t ~t) ~@args)\n      `(async/dropping-buffer ~@args))))", :column 1, :line 411, :macro true, :arglists ([& args]), :doc "Like dropping-buffer but with optional type annotations.\n\n  (dropping-buffer :- t ...) creates a dropping buffer that can read and write type t.\n  Subsequent arguments are passed directly to clojure.core.async/dropping-buffer.\n\n  Note: (dropping-buffer :- t ...) is the same as ((inst dropping-buffer t) ...)"}