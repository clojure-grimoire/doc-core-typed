{:ns "clojure.core.typed", :name "non-nil-return", :file "clojure/core/typed.clj", :type :macro, :src "(defmacro non-nil-return \n  \"Override the return type of fully qualified method msym to be non-nil.\n  Takes a set of relevant arities,\n  represented by the number of parameters it takes (rest parameter counts as one),\n  or :all which overrides all arities.\n  \n  eg. ; must use full class name\n      (non-nil-return java.lang.Class/getDeclaredMethod :all)\"\n  [msym arities]\n  `(non-nil-return* '~msym '~arities))", :column 1, :line 1636, :macro true, :arglists ([msym arities]), :doc "Override the return type of fully qualified method msym to be non-nil.\n  Takes a set of relevant arities,\n  represented by the number of parameters it takes (rest parameter counts as one),\n  or :all which overrides all arities.\n  \n  eg. ; must use full class name\n      (non-nil-return java.lang.Class/getDeclaredMethod :all)"}