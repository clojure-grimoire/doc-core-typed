{:ns "clojure.core.typed", :name "dotimes>", :file "clojure/core/typed.clj", :type :macro, :src "(defmacro ^{:deprecated \"0.2.45\"} dotimes>\n  \"DEPRECATED: Use clojure.core.typed/dotimes\n\n  Like dotimes.\n  \n  eg. (dotimes> [_ 100]\n        (println \\\"like normal\\\"))\"\n  [bindings & body]\n  (err/deprecated-renamed-macro\n    &form\n    'dotimes>\n    'dotimes)\n  (@#'core/assert-args\n     (vector? bindings) \"a vector for its binding\"\n     (= 2 (count bindings)) \"exactly 2 forms in binding vector\")\n  (let [i (first bindings)\n        n (second bindings)]\n    `(let [n# (long ~n)]\n       (loop> [~i :- ~'clojure.core.typed/AnyInteger 0]\n         (when (< ~i n#)\n           ~@body\n           (recur (unchecked-inc ~i)))))))", :column 1, :line 147, :macro true, :deprecated "0.2.45", :arglists ([bindings & body]), :doc "DEPRECATED: Use clojure.core.typed/dotimes\n\n  Like dotimes.\n  \n  eg. (dotimes> [_ 100]\n        (println \"like normal\"))"}