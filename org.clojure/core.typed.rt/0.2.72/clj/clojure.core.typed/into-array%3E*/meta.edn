{:type :fn, :src "(defn ^:skip-wiki\n  into-array>*\n  \"Internal use only. Use into-array>.\"\n  ([cljt coll]\n   (load-if-needed)\n   (let [parse-type @(ns-resolve (find-ns 'clojure.core.typed.parse-unparse)\n                                 'parse-type)\n         amc @(ns-resolve (find-ns 'clojure.core.typed.array-ops)\n                          'Type->array-member-Class)]\n     (impl/with-clojure-impl\n       (into-array (-> cljt parse-type amc) coll))))\n  ([javat cljt coll]\n   (load-if-needed)\n   (let [parse-type @(ns-resolve (find-ns 'clojure.core.typed.parse-unparse)\n                                 'parse-type)\n         amc @(ns-resolve (find-ns 'clojure.core.typed.array-ops)\n                          'Type->array-member-Class)]\n     (impl/with-clojure-impl\n       (into-array (-> javat parse-type amc) coll))))\n  ;this is the hacky case to prevent full core.typed from loading\n  ([into-array-syn javat cljt coll]\n   (into-array (resolve into-array-syn) coll)))", :ns "clojure.core.typed", :name "into-array>*", :file "clojure/core/typed.clj", :skip-wiki true, :column 1, :line 1590, :doc "Internal use only. Use into-array>."}