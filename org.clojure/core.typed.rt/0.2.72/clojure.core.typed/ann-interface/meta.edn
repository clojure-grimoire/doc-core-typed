{:ns "clojure.core.typed", :name "ann-interface", :file "clojure/core/typed.clj", :type :macro, :src "(defmacro \n  ^{:forms '[(ann-interface vbnd varsym & methods)\n             (ann-interface varsym & methods)]}\n  ann-interface \n  \"Annotate a possibly polymorphic interface (created with definterface) with method types.\n\n  Note: Unlike ann-protocol, omit the target ('this') argument in the method signatures.\n  \n  eg. (ann-interface IFoo\n        bar\n        (Fn [-> Any]\n            [Number Symbol -> Any])\n        baz\n        [Number -> Number])\n      (definterface IFoo\n        (bar [] [n s])\n        (baz [n]))\n\n      ; polymorphic protocol\n      ; x is scoped in the methods\n      (ann-protocol [[x :variance :covariant]]\n        IFooPoly\n        bar\n        (Fn [-> Any]\n            [Number Symbol -> Any])\n        baz\n        [Number -> Number])\n      (definterface IFooPoly\n        (bar [] [n s])\n        (baz [n]))\"\n  [& args]\n  (let [bnd-provided? (vector? (first args))\n        vbnd (when bnd-provided?\n               (first args))\n        [clsym & mth] (if bnd-provided?\n                         (next args)\n                         args)\n        _ (let [fs (frequencies (map first (partition 2 mth)))]\n            (when-let [dups (seq (filter (fn [[_ freq]] (< 1 freq)) fs))]\n              (println (str \"WARNING: Duplicate method annotations in ann-interface (\" clsym \n                            \"): \" (str/join \", \" (map first dups))))\n              (flush)))\n        ; duplicates are checked above.\n        ; duplicate munged methods are checked in collect-phase\n        {:as mth} mth\n        qualsym (if (namespace clsym)\n                  clsym\n                  (symbol (munge (str (ns-name *ns*))) (name clsym)))]\n    `(ann-interface* '~vbnd '~clsym '~mth)))", :column 1, :line 1966, :macro true, :arglists ([& args]), :doc "Annotate a possibly polymorphic interface (created with definterface) with method types.\n\n  Note: Unlike ann-protocol, omit the target ('this') argument in the method signatures.\n  \n  eg. (ann-interface IFoo\n        bar\n        (Fn [-> Any]\n            [Number Symbol -> Any])\n        baz\n        [Number -> Number])\n      (definterface IFoo\n        (bar [] [n s])\n        (baz [n]))\n\n      ; polymorphic protocol\n      ; x is scoped in the methods\n      (ann-protocol [[x :variance :covariant]]\n        IFooPoly\n        bar\n        (Fn [-> Any]\n            [Number Symbol -> Any])\n        baz\n        [Number -> Number])\n      (definterface IFooPoly\n        (bar [] [n s])\n        (baz [n]))", :forms [(ann-interface vbnd varsym & methods) (ann-interface varsym & methods)]}