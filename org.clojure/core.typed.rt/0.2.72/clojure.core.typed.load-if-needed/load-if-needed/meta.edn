{:type :fn, :src "(defn load-if-needed \n  \"Load and initialize all of core.typed if not already\"\n  []\n  (when-not vs/*currently-loading*\n    (binding [vs/*currently-loading* true]\n      (when-not (io/resource \"clojure/core/typed/init.clj\")\n        (err/int-error \"core.typed checker is not found on classpath\"))\n      (when-not (find-ns 'clojure.core.typed.init)\n        (require 'clojure.core.typed.init))\n      (let [init-ns (find-ns 'clojure.core.typed.init)]\n        (assert init-ns)\n        (when-not (@(ns-resolve init-ns 'loaded?))\n          (println \"Initializing core.typed ...\")\n          (flush)\n          (time (@(ns-resolve init-ns 'load-impl)))\n          (println \"core.typed initialized.\")\n          (flush))))))", :ns "clojure.core.typed.load-if-needed", :name "load-if-needed", :file "clojure/core/typed/load_if_needed.clj", :column 1, :line 8, :arglists ([]), :doc "Load and initialize all of core.typed if not already"}