{:type :fn, :src "(defn take-when\n  \"When pred is true of the head of seq, return [head tail]. Otherwise\n  [nil seq]. Used as a helper for parsing optinal typed elements out\n  of sequences. Say docstrings out of argument seqs.\"\n  [pred seq]\n  (if (pred (first seq))\n    ((juxt first rest) seq)\n    [nil seq]))", :ns "clojure.core.typed.internal", :name "take-when", :file "clojure/core/typed/internal.clj", :column 1, :line 192, :arglists ([pred seq]), :doc "When pred is true of the head of seq, return [head tail]. Otherwise\n  [nil seq]. Used as a helper for parsing optinal typed elements out\n  of sequences. Say docstrings out of argument seqs."}