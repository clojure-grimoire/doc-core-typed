{:type :fn, :src "(defn parse-let*\n  [[bvec & forms]]\n  (let [actual-bvec (loop [bvec bvec\n                           actual-bvec (empty bvec)] ; empty vector with same metadata as bvec\n                      (assert (vector? actual-bvec))\n                      (cond\n                        (empty? bvec) actual-bvec\n                        :else (if (#{:-} (second bvec))\n                                (let [_ (assert (#{4} (count (take 4 bvec)))\n                                                \"Incorrect forms following :-\")\n                                      [v colon t init & rst] bvec]\n                                  (recur rst\n                                         (conj actual-bvec v `(clojure.core.typed/ann-form ~init ~t))))\n                                (let [_ (assert (#{2} (count (take 2 bvec)))\n                                                \"No init found for local binding\")\n                                      [v init & rst] bvec]\n                                  (recur rst\n                                         (conj actual-bvec v init))))))]\n    {:let `(clojure.core/let ~actual-bvec ~@forms)}))", :ns "clojure.core.typed.internal", :name "parse-let*", :file "clojure/core/typed/internal.clj", :column 1, :line 323, :arglists ([[bvec & forms]])}