{:type :fn, :src "(defn gen-ann-protocol [{:keys [name methods binder] :as dp-ann}]\n  (let [tvars (set (binder-names binder))\n        this-type (if binder\n                    `(~name ~@(binder-names binder))\n                    name)]\n  `(clojure.core.typed/ann-protocol \n     ~@(when binder\n         [binder])\n     ~name\n     ~@(mapcat (fn [{:keys [name arities poly]}]\n                 (let [localtvars (set (binder-names poly))\n                       _ (assert (empty? (set/intersection localtvars\n                                                           tvars))\n                                 \"Shadowing a protocol type variable in a method is disallowed\")\n                       fn-type `(clojure.core.typed/IFn\n                                  ~@(map (fn [{:keys [ptypes ret]}]\n                                           `[~@(concat [this-type] (map :type (rest ptypes))) ~'-> ~(:type ret)])\n                                         arities))]\n                   [name (if poly\n                           `(clojure.core.typed/All ~poly ~fn-type)\n                           fn-type)]))\n               methods))))", :ns "clojure.core.typed.internal", :name "gen-ann-protocol", :file "clojure/core/typed/internal.clj", :column 1, :line 216, :arglists ([{:keys [name methods binder], :as dp-ann}])}