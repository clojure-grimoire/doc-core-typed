{:type :fn, :src "(defn parse-free [f gsym]\n  (if (symbol? f)\n    {:op :F\n     :name gsym\n     :bounds any-bounds}\n    (let [[n & {:keys [< >] :as opts}] f]\n      (when (contains? opts :kind)\n        (err/deprecated-warn \"kind annotation for TFn parameters is removed\"))\n      (when (:variance opts) \n        (err/int-error \"Variance not supported for variables introduced with All\"))\n      {:op :F\n       :name gsym\n       :bounds {:upper (when (contains? opts :<)\n                         (parse <))\n                :lower (when (contains? opts :>)\n                         (parse >))}})))", :ns "clojure.core.typed.parse-ast", :name "parse-free", :file "clojure/core/typed/parse_ast.clj", :column 1, :line 298, :arglists ([f gsym])}