{:type :macro, :src "(defmacro impl-case [& {clj-case :clojure cljs-case :cljs :as opts}]\n  (assert (= #{:clojure :cljs} (set (keys opts)))\n          \"Incorrect cases to impl-case\")\n  `(case (current-impl)\n     ~clojure ~clj-case\n     ~clojurescript ~cljs-case\n     (assert nil (str \"No case matched for impl-case\" (current-impl)))))", :macro true, :ns "clojure.core.typed.current-impl", :name "impl-case", :file "clojure/core/typed/current_impl.clj", :column 1, :line 143, :arglists ([& {clj-case :clojure, cljs-case :cljs, :as opts}])}