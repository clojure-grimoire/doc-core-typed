{:type :fn, :src "(defn cljs-bindings []\n  {(the-var 'clojure.core.typed.name-env/*current-name-env*)\n   (v 'clojure.core.typed.name-env/CLJS-TYPE-NAME-ENV)\n   (the-var 'clojure.core.typed.protocol-env/*current-protocol-env*)\n   (v 'clojure.core.typed.protocol-env/CLJS-PROTOCOL-ENV)\n   (the-var 'clojure.core.typed.ns-deps/*current-deps*)\n   (v 'clojure.core.typed.ns-deps/CLJS-TYPED-DEPS)\n   ; var env\n   (the-var 'clojure.core.typed.var-env/*current-var-annotations*)\n   (v 'clojure.core.typed.var-env/CLJS-VAR-ANNOTATIONS)\n   (the-var 'clojure.core.typed.var-env/*current-nocheck-var?*)\n   (v 'clojure.core.typed.var-env/CLJS-NOCHECK-VAR?)\n   (the-var 'clojure.core.typed.var-env/*current-used-vars*)\n   (v 'clojure.core.typed.var-env/CLJS-USED-VARS)\n   (the-var 'clojure.core.typed.var-env/*current-checked-var-defs*)\n   (v 'clojure.core.typed.var-env/CLJS-CHECKED-VAR-DEFS) \n\n   (the-var 'clojure.core.typed.declared-kind-env/*current-declared-kinds*)\n   (v 'clojure.core.typed.declared-kind-env/CLJS-DECLARED-KIND-ENV) \n   (the-var 'clojure.core.typed.datatype-env/*current-datatype-env*)\n   (v 'clojure.core.typed.datatype-env/CLJS-DATATYPE-ENV)\n   (the-var 'clojure.core.typed.jsnominal-env/*current-jsnominal-env*)\n   (v 'clojure.core.typed.jsnominal-env/JSNOMINAL-ENV)})", :ns "clojure.core.typed.current-impl", :name "cljs-bindings", :file "clojure/core/typed/current_impl.clj", :column 1, :line 79, :arglists ([])}