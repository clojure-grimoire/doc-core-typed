{:clojure.core.typed/special-type true, :ns "clojure.core.typed", :name "HVec", :file "clojure/core/typed.clj", :type :var, :src "(def ^{:doc \"HVec is a type for heterogeneous vectors.\n            It extends clojure.core.typed/Vec and is a subtype\n            of clojure.core.typed/HSequential.\"\n       :forms '[(HVec [fixed*] :filter-sets [FS*] :objects [obj*])\n                (HVec [fixed* type *] :filter-sets [FS*] :objects [obj*])\n                (HVec [fixed* type ... bound] :filter-sets [FS*] :objects [obj*])\n                '[fixed*]\n                '[fixed* type *]\n                '[fixed* type ... bound]]\n       ::special-type true}\n  HVec)", :column 1, :line 1387, :doc "HVec is a type for heterogeneous vectors.\n            It extends clojure.core.typed/Vec and is a subtype\n            of clojure.core.typed/HSequential.", :forms [(HVec [fixed*] :filter-sets [FS*] :objects [obj*]) (HVec [fixed* type *] :filter-sets [FS*] :objects [obj*]) (HVec [fixed* type ... bound] :filter-sets [FS*] :objects [obj*]) (quote [fixed*]) (quote [fixed* type *]) (quote [fixed* type ... bound])]}